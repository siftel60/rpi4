#!/bin/sh
#^for color - based on ldir ct_info4_layercake.qos + hisham + dlakelan sqm source






##############################

# DEVEL 3.1.7-20210212

##############################



#@ldir          https://raw.githubusercontent.com/ldir-EDB0/sqm-scripts/exp/src/ctinfo_4layercake.qos
#@hisham2630    https://forum.openwrt.org/t/ultimate-sqm-settings-layer-cake-dscp-marks-new-script/53209
#               https://github.com/hisham2630/Ultimate-SQM-settings-Layer_cake-DSCP-marks-New-Script
#@dlakelan      https://raw.githubusercontent.com/dlakelan/routerperf/master/dscptag.sh









#OVERVIEW

# fundamentally based on ctinfo@ldir method with diffserv8, hisham/dlakelan ipset/rate/proto rate matching
# leverage ipsets + dnsmasq full on powerful routers to auto classify common streams
# and provide user hooks for special devices/protocols/sites
# not really aimed at being highly customisable but possible
# moreso a general "handle most common stuff and let me tweak a few hosts protocols"



#PREREQUISITES

#-ipset dnsmasq-full
#-various ipt modules i.e.: ctinfo, hashlimit, extra etc. etc.



#FEEDBACK/REQUESTS

#-community-build users or forum regulars with clear needs/suggestions post in rpi4 forum thread or pm
# domain names to be added to the various ipsets are highly needed
# your feedback is very welcome and apprieciated

#-non clear, vague, edge cases, general comments regarding sqm setup, script not working without
# practical debug output, not clearly stating your use case and operating conditions
# suggest to create a new thread or fork the script ( or originals listed above )






################################ DEVEL 3.1.7-20210215
#-add RECLASSIFY_SH ini script path and handling
#-mark torrent static ports CS1 from the get go (was CS0 -> bw-hit->handle)
#-setup for chunky-CS1-overrate-throttle/log
#-start to rewrite qosdebug.sh
#-handle timeout on ipset save
################################ DEVEL 3.1.6-20210212
#-alter http remaps +/~ large stream detections
#-more cleaning
#-add credits/prereq at top and clarify/clone .qos.help user options for extensification
#-die safer on no prereqs (ipset ipt) or check(elsewhere@log)
################################ DEVEL 3.1.5-20210210
#-improve ipset backup restore logix fix major restore no exist bug @ startup
#-improve gaming device flush/teardown
#-more cleaning @ CS_VARS
################################ DEVEL 3.1.3-20210211
#-add testing set backup and initital ini variables to alter functionality
#-more junk gone
################################ DEVEL 3.1.2-20210209
#-turn off volumous sony statix ip set adds > tba bitmaps/vlsm rules etc was sample set only and breaks backup grep per recordSLOW
#-add more DEBUG prints
#-start stop awareness @ ipset_do for backups and restore
#-move variable resolution into main for stop availability
################################ DEVEL 3.1.1-20210205
#-clean some junk out
################################ unknown date ~ 20210127
#-added masq-set bulk>openwrt downloads
#-possibly improved or fixed the bulk-sets matching rule
#-create dscp-vars for common sets/rules<->classes
#-comment clearer udp/tcp ip4/ip6
################################ unknown date ~ 20210121
#-added inline cloudfare ipset + rules (marked as cdn?)
#-added not-used anymore inline sony / other ipset@import<ips too many




################################ todo

#-use oneline include in dnsmasq-dhcp conf and/or handle cleanup @ qosdebug or similar
#-test multiwan @ /etc/custom/firewall/dscp/backup/sqmdscp_localnets6 SUBNET IFACE etc
#-more extensive static voip detection and channel isolation and catch similar protos
#-test complete teardown on toggle to another qos variant or disable
#-clearer 're-mark' hooks / conntrack flow [1]
#-set export/import retain logic + tweaks to related flush logic [1]
#-user narrow mark tracking log facility
#-fixup CS vals and better handle voip and other expedited non-ipset protocols
#-track down country/vendor specific domain lists for ipsets... mostly @gaming/vid 
#         or add more manually ( already added AU stan,disney etc ) cdns/cloudfare
#         seem to catch most providers
#-possible accounting hooks










########################################################################################## START-ORIGINAL-COMMENT
################################################################################### ORIGINAL@LDIR
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License version 2 as published by the
# Free Software Foundation.
#
# Copyright (C) 2012-5 Michael D. Taht, Toke Høiland-Jørgensen, Sebastian
# Moeller Additional hackery & standing on shoulders of giants (C) 2019 Kevin
# Darbyshire-Bryant
#
# This script is offered on the basis that it works for me and might be useful
# to others, but if it breaks you may keep all the pieces at no cost :-)
#
# diffserv5 takes advantage of a patched CAKE diffserv5 mode offering 5 tins of
# classification Least Effort, Bulk, Best Effort, Video, Voice.
# The difference between diffserv4 & diffserv5 is that diffserv5 has a tin for
# Least Effort, whilst diffserv4 maps Least Effort into Bulk.  Thus diffserv4
# treats my bittorrent as equal priority to my backups.  Bittorrent can wait,
# my backups must complete
#
# By default CAKE uses DSCP values as a key into the priority tins.
# Applications that set a DSCP (eg dropbear ssh) should have that
# respected/used.  CAKE offers other tin keying methods eg. fwmark.  This (by
# design) ignores any DSCP values, so if you wanted DSCP to have influence whilst
# using that you
# would have to write many x_tables rules to translate DSCP to tin (ie
# emulating the lookup cake already has)  For this reason I use DSCP as the tin
# priority key mechanism.
#
# DSCP values on egress are easy to find & manipulate.  Ingress is harder
# because CAKE has already handled the packet before x_tables gets a chance to
# see it.  An initial idea & solution for this 'ingress classification' problem
# is to use a tc action called 'connmark'.  This restores the firewall
# connection mark into the packet and CAKE can be told to look at this restored
# mark for tin selection.  Events turned out that the initial plans I had for
# 'fwmark' got neutered and whilst fwmark exists and works, I've chosen not to
# use it for this solution. (The initial plan was to get CAKE to store the
# chosen tin selected by DSCP into the fwmark itself, but qdiscs updating conntrack is regarded
# as a layering violation so is a no no, it worked well but upstream didn't
# like it)
#
# What I really wanted to do was store the DSCP value for a connection into the
# firewall and use that stored DSCP as the key.  Storing DSCP on egress and
# restoring on ingress was potentially more useful to other qdiscs not just
# CAKE as well.
#
# act_ctinfo was written and is in kernel 5.3,  This restores a firewall stored
# DSCP value into a packet's DSCP field.  The companion 'store' function has
# not yet made it upstream, being somewhat stalled by my bad C and requirement
# for an nftables implementation and I quite frankly have no idea how to write
# for nftables.  A 'hacked' together implementation for iptables does exist and
# that's what is used here.
#
# This script implements a 'dual level' of classification setting.  The 'hard'
# or fixed layer applies fixed DSCP settings to known host/port combinations.
# Traffic that isn't in this known set of rules, has a default Best Effort
# classification and exceeds CONNB bytes transferred is then hooked by a second
# rules set where it is demoted to BULK.
#
# How it works
#
# We usurp top byte of the firewall connmark for our own purposes.
# bits 3-8 = DSCP
# bit  2   = DSCPS flag - DSCP is stored in bits 3-8 but may be changed (0x02)
# bit  1   = DSCPF flag - DSCP is long-term fixed (0x01)
#
# egress packets are hooked by an iptables rule if DSCPS & DSCPF unset and are
# passed to a 'hard' hosts/port ruleset chain.  This chain sets any applicable
# DSCP in the packet and then uses connmark savedscp to store that set DSCP
# value along with a set DSCPS bit in the firewall connmark.  another rule
# hooks packets that have DSCPS set, DSCPF unset and a conntrack connbytes
# value bigger than CONNB.  These are sent to the dynamic ruleset chain.  The
# dynamic ruleset chain changes connections that are currently Best Effort to
# BULK and sets DSCPF
#
# ctinfo instances are set on both ingress and egress paths.  The ingress path
# is hopefully obvious but ctinfo on egress may not be quite so obvious to
# understand.  It is there to copy the previously set DSCP value to all
# corresponding egress packets and thus eliminate the requirement for each
# packet to pass through the 'hard' ruleset.
#
# More rubbish/info.  jump -j vs goto -g in iptables rules
# jump is a bit like a subroutine, in other words unless the 'jumped' to
# table drops or accepts a packet, the return from that sub-chain comes
# back to the calling chain just after the point where we jumped(called)
# the sub-chain.
# goto goes to the called chain, and when it returns it returns to the chain
# that called us.
# I make use of both
#
# Probably a slightly more computer science description:
# A 'jump' pushes a return chain address on to a stack, hence when the called chain
# finishes it knows where to return to.
# A 'goto' doesn't push a return chain address so when the called chain returns it
# returns to the chain that called us, not our current chain.
################################################################################### ORIGINAL@LDIR
########################################################################################## END-ORIGINAL-COMMENT











######################################## ORIGINAL

. /lib/functions/network.sh
. ${SQM_LIB_DIR}/defaults.sh

QDISC=cake

##############O??? #### below is simplified Rate * 1000 * duration / 8 ie 1000/8 = 125
DURUP=30
DURDN=30

CONNBDN=$(( ${DOWNLINK} * 125 * ${DURDN} ))
CONNBUP=$(( ${UPLINK}   * 125 * ${DURUP} ))

##########################
INGRESS_CAKE_OPTS="diffserv8" #INGRESS_CAKE_OPTS="diffserv4"
EGRESS_CAKE_OPTS="diffserv8" #EGRESS_CAKE_OPTS="diffserv4"






network_get_subnet SUBNET lan
network_find_wan6 ifc_wan6 && network_get_prefix6 PREFIX "${ifc_wan6}"












egress() {

    
    #local TCOUT=1
    #[ -n "$DEBUG" ] && TCOUT=1

    [ -n "$DEBUG" ] && echo "SILENT=1 $TC qdisc del dev $IFACE root"

    SILENT=1 $TC qdisc del dev $IFACE root

    
    #[ -n "$TCOUT" ] && echo "EGRESS() $TC qdisc add dev $IFACE root cake bandwidth ${UPLINK}kbit \
	#    $( get_cake_lla_string ) ${EGRESS_CAKE_OPTS} ${EQDISC_OPTS}"
    

    $TC qdisc add dev $IFACE root cake bandwidth ${UPLINK}kbit \
	    $( get_cake_lla_string ) ${EGRESS_CAKE_OPTS} ${EQDISC_OPTS}


    # put action on egressint setDSCP from stored-connmark counter intuitive ensuresoncemarkset all subsequent 
    # egress packets have same stored DSCP avoiding need to have iptables rules mark every packet
    
    [ -n "$DEBUG" ] && echo "$TC filter add dev $IFACE protocol all u32 match u32 0 0 action ctinfo dscp 0xfc000000 0x02000000"


    $TC filter add dev $IFACE protocol all u32 \
	match u32 0 0 \
	action ctinfo dscp 0xfc000000 0x02000000


}







ingress() {

    #local TCOUT=1
    #[ -n "$DEBUG" ] && TCOUT=1


    SILENT=1 $TC qdisc del dev $IFACE handle ffff: ingress
    $TC qdisc add dev $IFACE handle ffff: ingress

    SILENT=1 $TC qdisc del dev $DEV root


    [ "$ZERO_DSCP_INGRESS" -eq "1" ] && INGRESS_CAKE_OPTS="$INGRESS_CAKE_OPTS wash"
    
    #[ -n "$TCOUT" ] && echo "INGRESS() $TC qdisc add dev $DEV root cake bandwidth ${DOWNLINK}kbit \
	#    $( get_cake_lla_string ) ${INGRESS_CAKE_OPTS} ${IQDISC_OPTS}"


    $TC qdisc add dev $DEV root cake bandwidth ${DOWNLINK}kbit \
	    $( get_cake_lla_string ) ${INGRESS_CAKE_OPTS} ${IQDISC_OPTS}


    [ -n "$DEBUG" ] && echo "$IP link set dev $DEV up"
    
    $IP link set dev $DEV up


    # redirect all IP packets arriving in $IFACE to ifb0 set DSCP from conntrack mark #!DEBUGBREAKSHEREPUTABOVE

    $TC filter add dev $IFACE parent ffff: protocol all u32 \
	match u32 0 0 \
	action ctinfo dscp 0xfc000000 0x02000000 \
	action mirred egress redirect dev $DEV

}















































dynamicipset_setup() { #!NB: veth0? vs eth0?

	local FN="dynamicipset_setup" #local sLBL="wasconsoles" #local sLBL="monuncommon"
	#echL "$FN> populate $sLBL*traf ipsets LEARNCONNECTIONS:${DSCPMONLEARNCONNECTIONS:-off}"; sleep ${RCSLEEP:-0}


    if [ "$1" = "flush" ]; then

        iptables -D FORWARD -m set --match-set gamingdevice4 dst -j SET \
            --add-set gamingdevice4traf src,src --exist 2>/dev/null
        ip6tables -D FORWARD -m set --match-set gamingdevice6 dst -j SET \
            --add-set gamingdevice6traf src,src --exist 2>/dev/null


        while read THIS RULE; do
            [ -z "$RULE" ] && continue
            [ -n "$DEBUG" ] && echL "iptables -t mangle -D $RULE"
            iptables -t mangle -D $RULE
        done <<PPP
$(iptables-save  | grep mac-source | grep add-set | grep "$sLBL")
PPP

        while read THIS RULE; do
            [ -z "$RULE" ] && continue
            [ -n "$DEBUG" ] && echL "ip6tables -t mangle -D $RULE"
            ip6tables -t mangle -D $RULE
        done <<PPP
$(ip6tables-save  | grep mac-source | grep add-set | grep "$sLBL")
PPP


        #echL "ipset flush ${sLBL}4" #ipset flush "${sLBL}4" 2>/dev/null
        ipset_do "flush" "${sLBL}4" 2>/dev/null
        
        #echL "ipset flush ${sLBL}6" #ipset flush "${sLBL}6" 2>/dev/null
        ipset_do "flush" "${sLBL}6"

        return 0

    fi
    ###############################################################################





	################ THESE HOLD IPS WHICH ARE DYNAMICALLY OR STATICALLY ENTERED then are used to jump to MONdoCHAIN||action
	
    if ! ipset -n list | grep -q "^${sLBL}"; then
		echL "Creating-ipsets: ${sLBL}" msg
		ipset create ${sLBL} list:set 2>/dev/null
    fi

	if ! ipset -n list | grep -q "^${sLBL}4$"; then
		echL "Creating-ipsets: ${sLBL}4 ${sLBL}" msg #echo "${sLBL}4 [missing]"; #ISSUES="${ISSUES} ${sLBL}4 missing"
		ipset create ${sLBL}4 hash:ip family inet 2>/dev/null
		ipset create ${sLBL} list:set 2>/dev/null
		ipset add ${sLBL} ${sLBL}4 2>/dev/null

	fi

	if ! ipset -n list | grep -q "^${sLBL}6$"; then
		echL "Creating-ipsets: ${sLBL}6 ${sLBL}" msg #echo "${sLBL}6 [missing]"; #ISSUES="${ISSUES} ${sLBL}4 missing"
		ipset create ${sLBL}6 hash:ip family inet6 2>/dev/null
		ipset create ${sLBL} list:set 2>/dev/null
		ipset add ${sLBL} ${sLBL}6 2>/dev/null
	fi


	if [ ! -z "$ISSUES" ]; then echo "$FN> ISSUES: $ISSUES" && exit 0; fi




    ############################################ NOW ADD SOME RULES to populate above set or STATIC set entries
	if [ ! -z "$DSCPMONMACS" ]; then
        for cMAC in $DSCPMONMACS; do
            echL "${sLBL}mac: $(echo $cMAC | cut -c1-11) [learn-ips]"

			iptables -t mangle -D PREROUTING -m conntrack --ctstate NEW \
				-m mac --mac-source ${cMAC} -j SET --add-set ${sLBL} src --exist 2>/dev/null
			iptables -t mangle -I PREROUTING -m conntrack --ctstate NEW \
				-m mac --mac-source ${cMAC} -j SET --add-set ${sLBL} src --exist

			ip6tables -t mangle -D PREROUTING -m conntrack --ctstate NEW \
				-m mac --mac-source ${cMAC} -j SET --add-set ${sLBL} src --exist 2>/dev/null
			ip6tables -t mangle -I PREROUTING -m conntrack --ctstate NEW \
				-m mac --mac-source ${cMAC} -j SET --add-set ${sLBL} src --exist

		done

	else
		[ -n "$DEBUG" ] && echL "${sLBL}mac: DSCPMONMACS [none-learn-ips-6+4]" msg
	fi



	if [ ! -z "$DSCPMONIPS_4" ]; then #DSCPMONIPS_4="10.2.3.220"
        echL "${sLBL}mac: DSCPMONIPS_4 $DSCPMONIPS_4 [learn-ips-6+4]" msg; #sleep 2
		for cIP4 in $DSCPMONIPS_4; do
			echL "ipsetadd ipset add ${sLBL}4 $cIP4"; #sleep 1
			ipset add ${sLBL}4 $cIP4
		done
    else
        [ -n "$DEBUG" ] && echL "DSCPMONIPS_4:${DSCPMONIPS_4:-none}"
	fi



	if [ ! -z "$DSCPMONIPS_6" ]; then #DSCPMONIPS_6="::"
        echL "${sLBL}mac: DSCPMONIPS_6 $DSCPMONIPS_6 [learn-ips-6+4]" msg; #sleep 2
		for cIP6 in $DSCPMONIPS_6; do
			echL "ipsetadd ipset add ${sLBL}6 $cIP6"; #sleep 1
			ipset add ${sLBL}6 $cIP6
		done
    else
        [ -n "$DEBUG" ] && echL "DSCPMONIPS_6:${DSCPMONIPS_6:-none}"
	fi



	if [ ! -z "$DSCPMONLEARNCONNECTIONS" ]; then

        if ! ipset -n list | grep -q "^${sLBL}traf"; then
		    echL "Creating-ipsets: ${sLBL}traf" msg
	        ipset create ${sLBL}traf list:set 2>/dev/null
        fi
        if ! ipset -n list | grep -q "^${sLBL}4traf"; then
		    echL "Creating-ipsets: ${sLBL}4traf" msg
	        ipset create ${sLBL}4traf hash:ip,port family inet 2>/dev/null
	        ipset add ${sLBL}traf ${sLBL}4traf 2>/dev/null
        fi
        if ! ipset -n list | grep -q "^${sLBL}6traf"; then
		    echL "Creating-ipsets: ${sLBL}6traf" msg
	        ipset create ${sLBL}6traf hash:ip,port family inet6 2>/dev/null
	        ipset add ${sLBL}traf ${sLBL}6traf 2>/dev/null
        fi

	    #@thesetwocanuse->consolestraf!~?
	    #-A FORWARD -m set --match-set consoles4 dst -j SET --add-set consoles4traf src,src --exist
	    #@@@CHANGETHESE... NEW ! 10.2.3.x



    	iptables -D FORWARD -m set --match-set ${sLBL}4 dst -j SET --add-set ${sLBL}4traf src,src --exist 2>/dev/null
    	ip6tables -D FORWARD -m set --match-set ${sLBL}6 dst -j SET --add-set ${sLBL}6traf src,src --exist 2>/dev/null


	    iptables -I FORWARD -m set --match-set ${sLBL}4 dst -j SET --add-set ${sLBL}4traf src,src --exist
	    ip6tables -I FORWARD -m set --match-set ${sLBL}6 dst -j SET --add-set ${sLBL}6traf src,src --exist


	    if [ -n "$DEBUG" ]; then
		    echo "dbgchecknums: iptables-save | grep consoles | grep traf"; iptables-save | grep consoles | grep traf
		    echo "dbgchecknums: ip6tables-save | grep consoles | grep traf"; ip6tables-save | grep consoles | grep traf
		    sleep ${RCSLEEP:-0}
	    fi



	    if [ ! -z "$DSCPMON_TRAF_IGNORE_PORTSdT" ]; then
		    for cTRAFiP in $DSCPMON_TRAF_IGNORE_PORTSdT; do
                :
                #echL "$cTRAFIP LOGRULESNEEDFIX"

			    #set -x WHOOPS WHOLE FORWARD CHAIN NEED TO SETUP BETTER PRIMARY HOOKS TO CHAIN
			    #andorNEW

			    #iptables -D FORWARD  -p tcp -m tcp --dport $cTRAFiP -j RETURN 2>/dev/null
			    #ip6tables -D FORWARD  -p tcp -m tcp --dport $cTRAFiP -j RETURN 2>/dev/null
			
			    #iptables -I FORWARD  -p tcp -m tcp --dport $cTRAFiP -j RETURN 2>/dev/null
			    #ip6tables -I FORWARD  -p tcp -m tcp --dport $cTRAFiP -j RETURN 2>/dev/null

		    done
	    fi
                #TOS=0x00 PREC=0x80 20
                #iptables -t mangle -A POSTROUTING -m limit --limit 2/sec -m dscp --dscp 0x20 -j LOG --log-prefix 'dscp20 '
                #iptables -t mangle -D POSTROUTING -m limit --limit 2/sec -m dscp --dscp 0x20 -j LOG --log-prefix 'dscp20 '




	return 0




        if [ ! -z "$DSCPCONSOLELOGACCESS" ]; then
		    
            echL "$FN> [on] LOG DSCPCONSOLELEARNCONNECTIONS"
		    echo "$FN> MANUALLYOFFNEEDSCLEANING@>newerfunctionDSCPLOGSTUFF"
            sleep ${RCSLEEP:-0}


		    #@@@!MATCH NON-ADDED-THENLOG-ONCE #@i.e. -I ! match ipsettraf then log


            #iptables -t mangle -I PREROUTING -p tcp ! -d 10.2.3.1 -m conntrack \
            #    --ctstate NEW  -m multiport ! --ports 138,5353,123,22,1900,80,591,8008,8080,443 \
            #     -m set --match-set consoles4 src -j LOG  --log-prefix "CON4-newcon"
    
            #ip6tables -t mangle -I PREROUTING -p tcp -m conntrack --ctstate NEW  \
            #    -m multiport ! --ports 138,5353,123,22,1900,80,591,8008,8080,443 \
            #    -m set --match-set consoles6 src -j LOG --log-prefix "CON6-newcon"

            #iptables -t mangle -I PREROUTING -p udp ! -d 10.2.3.1 -m conntrack --ctstate NEW \
            #    -m multiport ! --ports 138,5353,123,22,1900,80,591,8008,8080,443 -m set \
            #    --match-set consoles4 src -j LOG  --log-prefix "CON4-newcon"
            
            #ip6tables -t mangle -I PREROUTING -p udp -m conntrack --ctstate NEW \
            #    -m multiport ! --ports 138,5353,123,22,1900,80,591,8008,8080,443 -m set \
            #    --match-set consoles6 src -j LOG --log-prefix "CON6-newcon"

        fi



	else
		#echL "$FN> ENDECHOpopulate consoles*traf ipsets DSCPCONSOLELEARNCONNECTIONS=[off]"; sleep ${RCSLEEP:-0}
		[ -n "$DEBUG" ] && echL "$FN> populate ${sLBL}*traf DISABLED"; sleep ${RCSLEEP:-0}
	fi


}

############################################## LOGWATCH-TRAFFIX
#iptables -t mangle -I PREROUTING -m conntrack --ctstate NEW -m set --match-set consoles4 src -j LOG  --log-prefix "CON4-newcon"
#ip6tables -t mangle -I PREROUTING -m conntrack --ctstate NEW -m set --match-set consoles6 src -j LOG --log-prefix "CON6-newcon"
################################################### LOGWATCH-TRAFFIX
########@@@->not53+22_?>conditional->80:443 ! 240.x !local || -o eth1?||WANIF?
#########-N logdscp -m limit || CONNMARKS etc.
#########  -m multiport ! --ports 1900
###############################################################























































teardown() {

    #@@@NOTUSED@flush?currently appears to be for dynamically learned gaming device data@mac-changes handle


	iptables -D FORWARD -m set --match-set ${sLBL}4 dst -j SET --add-set ${sLBL}4traf src,src --exist 2>/dev/null
	ip6tables -D FORWARD -m set --match-set ${sLBL}6 dst -j SET --add-set ${sLBL}6traf src,src --exist 2>/dev/null

	for cMAC in $DSCPMONMACS; do
			
			echL "${sLBL}mac: TEARDOWN $cMAC [learn-ips]" msg

			iptables -t mangle -D PREROUTING -m conntrack --ctstate NEW \
				-m mac --mac-source ${cMAC} -j SET --add-set ${sLBL} src --exist 2>/dev/null

			ip6tables -t mangle -D PREROUTING -m conntrack --ctstate NEW \
				-m mac --mac-source ${cMAC} -j SET --add-set ${sLBL} src --exist 2>/dev/null

	done

    #nowflushedelsewhere@'revert||removeonly'
	ipset destroy ${sLBL}traf
	ipset destroy ${sLBL}6traf
	ipset destroy ${sLBL}4traf
	ipset destroy ${sLBL}
	ipset destroy ${sLBL}6
	ipset destroy ${sLBL}4

}







dumpdnsmasqipsetlist() {

cat <<'EOF'
################################################################################################## SQMDSCPIPSETS-START
######################################################################################################################
################################################################################### Latency Sensitive (gaming/voip)
ipset=/igamecj.com/gcloudcs.com/qos.gcloud.qq.com/latsens,latsens6
################################################################################### video/audio streams
ipset=/zoom.us/streaming,streaming6
################################################################ Youtube
ipset=/googlevideo.com/*.googlevideo.com/streaming,streaming6
ipset=/vevo.com/streaming,streaming6
#ipset=/vevo.com/Vid4,Vid6
################################################################ NetFlix
ipset=/nflxvideo.net/streaming,streaming6
#ipset=/nflxvideo.net/rangeA-netflix.cdn.enbgk.isp.sky.com/Vid4,Vid6
################################################################ AmazonVideo
ipset=/s3.ll.dash.row.aiv-cdn.net/d25xi40x97liuc.cloudfront.net/aiv-delivery.net/streaming,streaming6
################################################################ Facebook
ipset=/fbcdn.net/streaming,streaming6
################################################################ Twitch
ipset=/ttvnw.net/streaming,streaming6
################################################################ VeVo
ipset=/vevo.com/streaming,streaming6
################################################################ Spotify
ipset=/audio-fa.scdn.cot/streaming,streaming6
################################################################ Deezer
ipset=/deezer.com/streaming,streaming6
################################################################ SoundCloud
ipset=/sndcdn.com/streaming,streaming6
################################################################ last.fm
ipset=/last.fm/streaming,streaming6
################################################################ reddit videos
ipset=/v.redd.it/streaming,streaming6
################################################################ twitch.tv
ipset=/ttvnw.net/streaming,streaming6
################################################################ abciview
ipset=/iview.abc.net.au/streaming,streaming6
################################################################ stan
ipset=/play.stan.com.au/streaming,streaming6
################################################################ disneyplus
ipset=/disneyplus.com/streaming,streaming6
################################################################ othersites
ipset=/fbcdn.net/streaming,streaming6
ipset=/ttvnw.net/streaming,streaming6
ipset=/aiv-cdn.net/r.cloudfront.net/aiv-delivery.net/streaming,streaming6
ipset=/vs-dash-uk-live.akamaized.net/streaming,streaming6
ipset=/cdn.bllon.isp.sky.com/live.bidi.net.uk/streaming,streaming6
ipset=/ssl-bbcdotcom.2cnt.net/streaming,streaming6
ipset=/millicast.com/streaming,streaming6
ipset=/xirsys.com/streaming,streaming6
ipset=/audio-fa.scdn.cot/streaming,streaming6
ipset=/sndcdn.com/streaming,streaming6
ipset=/v.redd.it/streaming,streaming6
ipset=/ttvnw.net/streaming,streaming6
######################################################################################### cdn providers 
ipset=/googletagmanager.com/googleusercontent.com/*.googleusercontent.com/google.com/fbcdn.net/*.fbcdn.net/akamaihd.net/*.akamaihd.net/whatsapp.net/*.whatsapp.net/whatsapp.com/*.whatsapp.com/www-cdn.whatsapp.net/googleapis.com/*.googleapis.com/ucy.ac.cy/1e100.net/hwcdn.net/usrcdn,usrcdn6
########################################################################################## Bulk downloads
############################################################# qq download
ipset=/download.qq.com/bulk,bulk6
############################################################# Steam Download
ipset=/steamcontent.com/bulk,bulk6
############################################################# PSN Download
ipset=/gs2.ww.prod.dl.playstation.net/bulk,bulk6
############################################################# DropBox
ipset=/dropbox.com/dropboxstatic.com/dropbox-dns.com/log.getdropbox.com/bulk,bulk6
############################################################# Google Drive
ipset=/drive.google.com/drive-thirdparty.googleusercontent.com/bulk,bulk6
############################################################# onedrive
ipset=/1drv.ms/bulk,bulk6
ipset=/1drv.com/bulk,bulk6
############################################################# Google Docs
ipset=/docs.google.com/docs.googleusercontent.com/bulk,bulk6
############################################################# PlayStore Download
ipset=/gvt1.com/bulk,bulk6
############################################################# WhatsApp Files
ipset=/mmg-fna.whatsapp.net/bulk,bulk6
############################################################# Youtube Upload
ipset=/upload.youtube.com/upload.video.google.com/bulk,bulk6
############################################################# WindowsUpdate
ipset=/windowsupdate.com/update.microsoft.com/bulk,bulk6
ipset=/ms-acdc.office.com/bulk,bulk6
############################################################# be
ipset=/graph.microsoft.com/bulk,bulk6
ipset=/web.whatsapp.com/bulk,bulk6
############################################################# openwrt cdn downloads
ipset=/*.fastly.net/bulk,bulk6
ipset=/downloads.openwrt.org/bulk,bulk6
ipset=/*.cdn.openwrt.org/bulk,bulk6
#################################################################################################### SQMDSCPIPSETS-END
ipset=/assetcdn.101.arenanetworks.com/gamecache4,gamecache6
ipset=/assetcdn.102.arenanetworks.com/gamecache4,gamecache6
ipset=/assetcdn.103.arenanetworks.com/gamecache4,gamecache6
ipset=/live.patcher.bladeandsoul.com/gamecache4,gamecache6
ipset=/dist.blizzard.com/gamecache4,gamecache6
ipset=/dist.blizzard.com.edgesuite.net/gamecache4,gamecache6
ipset=/llnw.blizzard.com/gamecache4,gamecache6
ipset=/edgecast.blizzard.com/gamecache4,gamecache6
ipset=/blizzard.vo.llnwd.net/gamecache4,gamecache6
ipset=/blzddist1-a.akamaihd.net/gamecache4,gamecache6
ipset=/blzddist2-a.akamaihd.net/gamecache4,gamecache6
ipset=/blzddist3-a.akamaihd.net/gamecache4,gamecache6
ipset=/blzddist4-a.akamaihd.net/gamecache4,gamecache6
ipset=/level3.blizzard.com/gamecache4,gamecache6
ipset=/nydus.battle.net/gamecache4,gamecache6
ipset=/edge.blizzard.top.comcast.net/gamecache4,gamecache6
ipset=/cdn.blizzard.com/gamecache4,gamecache6
ipset=/cdn-11.eft-store.com/gamecache4,gamecache6
ipset=/cl-453343cd.gcdn.co/gamecache4,gamecache6
ipset=/cdn.homecomingservers.com/gamecache4,gamecache6
ipset=/nsa.tools/gamecache4,gamecache6
ipset=/pls.patch.daybreakgames.com/gamecache4,gamecache6
ipset=/cdn1.epicgames.com/gamecache4,gamecache6
ipset=/cdn.unrealengine.com/gamecache4,gamecache6
ipset=/cdn1.unrealengine.com/gamecache4,gamecache6
ipset=/cdn2.unrealengine.com/gamecache4,gamecache6
ipset=/cdn3.unrealengine.com/gamecache4,gamecache6
ipset=/download.epicgames.com/gamecache4,gamecache6
ipset=/download2.epicgames.com/gamecache4,gamecache6
ipset=/download3.epicgames.com/gamecache4,gamecache6
ipset=/download4.epicgames.com/gamecache4,gamecache6
ipset=/epicgames-download1.akamaized.net/gamecache4,gamecache6
ipset=/cdn.zaonce.net/gamecache4,gamecache6
ipset=/hirez.http.internapcdn.net/gamecache4,gamecache6
ipset=/level3.nwhttppatch.crypticstudios.com/gamecache4,gamecache6
ipset=/filedelivery.nexusmods.com/gamecache4,gamecache6
ipset=/ccs.cdn.wup.shop.nintendo.com/gamecache4,gamecache6
ipset=/ccs.cdn.wup.shop.nintendo.net/gamecache4,gamecache6
ipset=/ccs.cdn.wup.shop.nintendo.net.edgesuite.net/gamecache4,gamecache6
ipset=/geisha-wup.cdn.nintendo.net/gamecache4,gamecache6
ipset=/geisha-wup.cdn.nintendo.net.edgekey.net/gamecache4,gamecache6
ipset=/idbe-wup.cdn.nintendo.net/gamecache4,gamecache6
ipset=/idbe-wup.cdn.nintendo.net.edgekey.net/gamecache4,gamecache6
ipset=/ecs-lp1.hac.shop.nintendo.net/gamecache4,gamecache6
ipset=/receive-lp1.dg.srv.nintendo.net/gamecache4,gamecache6
ipset=/*.wup.eshop.nintendo.net/gamecache4,gamecache6
ipset=/*.hac.lp1.d4c.nintendo.net/gamecache4,gamecache6
ipset=/*.hac.lp1.eshop.nintendo.net/gamecache4,gamecache6
ipset=/origin-a.akamaihd.net/gamecache4,gamecache6
ipset=/lvlt.cdn.ea.com/gamecache4,gamecache6
ipset=/rxp-lv.cncirc.net/gamecache4,gamecache6
ipset=/cronub.fairplayinc.uk/gamecache4,gamecache6
ipset=/amirror.tyrant.gg/gamecache4,gamecache6
ipset=/mirror.usa.tyrant.gg/gamecache4,gamecache6
ipset=/renx.b-cdn.net/gamecache4,gamecache6
ipset=/l3cdn.riotgames.com/gamecache4,gamecache6
ipset=/worldwide.l3cdn.riotgames.com/gamecache4,gamecache6
ipset=/riotgamespatcher-a.akamaihd.net/gamecache4,gamecache6
ipset=/riotgamespatcher-a.akamaihd.net.edgesuite.net/gamecache4,gamecache6
ipset=/*.dyn.riotcdn.net/gamecache4,gamecache6
ipset=/patches.rockstargames.com/gamecache4,gamecache6
ipset=/gs2.ww.prod.dl.playstation.net/gamecache4,gamecache6
ipset=/gs2.sonycoment.loris-e.llnwd.net/gamecache4,gamecache6
ipset=/patch-dl.ffxiv.com/gamecache4,gamecache6
ipset=/lancache.steamcontent.com/gamecache4,gamecache6
ipset=/*.content.steampowered.com/gamecache4,gamecache6
ipset=/content1.steampowered.com/gamecache4,gamecache6
ipset=/content2.steampowered.com/gamecache4,gamecache6
ipset=/content3.steampowered.com/gamecache4,gamecache6
ipset=/content4.steampowered.com/gamecache4,gamecache6
ipset=/content5.steampowered.com/gamecache4,gamecache6
ipset=/content6.steampowered.com/gamecache4,gamecache6
ipset=/content7.steampowered.com/gamecache4,gamecache6
ipset=/content8.steampowered.com/gamecache4,gamecache6
ipset=/cs.steampowered.com/gamecache4,gamecache6
ipset=/steamcontent.com/gamecache4,gamecache6
ipset=/client-download.steampowered.com/gamecache4,gamecache6
ipset=/*.hsar.steampowered.com.edgesuite.net/gamecache4,gamecache6
ipset=/*.akamai.steamstatic.com/gamecache4,gamecache6
ipset=/content-origin.steampowered.com/gamecache4,gamecache6
ipset=/clientconfig.akamai.steamtransparent.com/gamecache4,gamecache6
ipset=/steampipe.akamaized.net/gamecache4,gamecache6
ipset=/edgecast.steamstatic.com/gamecache4,gamecache6
ipset=/steam.apac.qtlglb.com.mwcloudcdn.com/gamecache4,gamecache6
ipset=/*.cm.steampowered.com/gamecache4,gamecache6
ipset=/cdn1-sea1.valve.net/gamecache4,gamecache6
ipset=/cdn2-sea1.valve.net/gamecache4,gamecache6
ipset=/*.steam-content-dnld-1.apac-1-cdn.cqloud.com/gamecache4,gamecache6
ipset=/*.steam-content-dnld-1.eu-c1-cdn.cqloud.com/gamecache4,gamecache6
ipset=/steam.apac.qtlglb.com/gamecache4,gamecache6
ipset=/edge.steam-dns.top.comcast.net/gamecache4,gamecache6
ipset=/edge.steam-dns-2.top.comcast.net/gamecache4,gamecache6
ipset=/steam.naeu.qtlglb.com/gamecache4,gamecache6
ipset=/steampipe-kr.akamaized.net/gamecache4,gamecache6
ipset=/steam.ix.asn.au/gamecache4,gamecache6
ipset=/steam.eca.qtlglb.com/gamecache4,gamecache6
ipset=/steam.cdn.on.net/gamecache4,gamecache6
ipset=/update5.dota2.wmsj.cn/gamecache4,gamecache6
ipset=/update2.dota2.wmsj.cn/gamecache4,gamecache6
ipset=/update6.dota2.wmsj.cn/gamecache4,gamecache6
ipset=/update3.dota2.wmsj.cn/gamecache4,gamecache6
ipset=/update1.dota2.wmsj.cn/gamecache4,gamecache6
ipset=/update4.dota2.wmsj.cn/gamecache4,gamecache6
ipset=/update5.csgo.wmsj.cn/gamecache4,gamecache6
ipset=/update2.csgo.wmsj.cn/gamecache4,gamecache6
ipset=/update4.csgo.wmsj.cn/gamecache4,gamecache6
ipset=/update3.csgo.wmsj.cn/gamecache4,gamecache6
ipset=/update6.csgo.wmsj.cn/gamecache4,gamecache6
ipset=/update1.csgo.wmsj.cn/gamecache4,gamecache6
ipset=/st.dl.bscstorage.net/gamecache4,gamecache6
ipset=/cdn.mileweb.cs.steampowered.com.8686c.com/gamecache4,gamecache6
ipset=/live.patcher.elderscrollsonline.com/gamecache4,gamecache6
ipset=/d3rmjivj4k4f0t.cloudfront.net/gamecache4,gamecache6
ipset=/addons.forgesvc.net/gamecache4,gamecache6
ipset=/media.forgecdn.net/gamecache4,gamecache6
ipset=/files.forgecdn.net/gamecache4,gamecache6
ipset=/*.cdn.ubi.com/gamecache4,gamecache6
ipset=/content.warframe.com/gamecache4,gamecache6
ipset=/dl1.wargaming.net/gamecache4,gamecache6
ipset=/dl2.wargaming.net/gamecache4,gamecache6
ipset=/wg.gcdn.co/gamecache4,gamecache6
ipset=/wgusst-na.wargaming.net/gamecache4,gamecache6
ipset=/wgusst-eu.wargaming.net/gamecache4,gamecache6
ipset=/update-v4r4h10x.worldofwarships.com/gamecache4,gamecache6
ipset=/wgus-wotasia.wargaming.net/gamecache4,gamecache6
ipset=/dl-wot-ak.wargaming.net/gamecache4,gamecache6
ipset=/dl-wot-gc.wargaming.net/gamecache4,gamecache6
ipset=/dl-wot-se.wargaming.net/gamecache4,gamecache6
ipset=/dl-wot-cdx.wargaming.net/gamecache4,gamecache6
ipset=/dl-wows-ak.wargaming.net/gamecache4,gamecache6
ipset=/dl-wows-gc.wargaming.net/gamecache4,gamecache6
ipset=/dl-wows-se.wargaming.net/gamecache4,gamecache6
ipset=/dl-wows-cdx.wargaming.net/gamecache4,gamecache6
ipset=/dl-wowp-ak.wargaming.net/gamecache4,gamecache6
ipset=/dl-wowp-gc.wargaming.net/gamecache4,gamecache6
ipset=/dl-wowp-se.wargaming.net/gamecache4,gamecache6
ipset=/dl-wowp-cdx.wargaming.net/gamecache4,gamecache6
ipset=/*.windowsupdate.com/gamecache4,gamecache6
ipset=/windowsupdate.com/gamecache4,gamecache6
ipset=/*.dl.delivery.mp.microsoft.com/gamecache4,gamecache6
ipset=/dl.delivery.mp.microsoft.com/gamecache4,gamecache6
ipset=/*.update.microsoft.com/gamecache4,gamecache6
ipset=/*.do.dsp.mp.microsoft.com/gamecache4,gamecache6
ipset=/*.microsoft.com.edgesuite.net/gamecache4,gamecache6
ipset=/amupdatedl.microsoft.com/gamecache4,gamecache6
ipset=/amupdatedl2.microsoft.com/gamecache4,gamecache6
ipset=/amupdatedl3.microsoft.com/gamecache4,gamecache6
ipset=/amupdatedl4.microsoft.com/gamecache4,gamecache6
ipset=/amupdatedl5.microsoft.com/gamecache4,gamecache6
ipset=/assets1.xboxlive.com/gamecache4,gamecache6
ipset=/assets2.xboxlive.com/gamecache4,gamecache6
ipset=/dlassets.xboxlive.com/gamecache4,gamecache6
ipset=/xboxone.loris.llnwd.net/gamecache4,gamecache6
ipset=/xboxone.vo.llnwd.net/gamecache4,gamecache6
ipset=/xbox-mbr.xboxlive.com/gamecache4,gamecache6
ipset=/assets1.xboxlive.com.nsatc.net/gamecache4,gamecache6
ipset=/xvcf1.xboxlive.com/gamecache4,gamecache6
######################################################################################################################
############ playstore
ipset=/gvt1.com/gvt2.com/android.clients.google.com/clients1.google.com/clients2.google.com/clients3.google.com/clients4.google.com/clients5.google.com/clients6.google.com/play.googleapis.com/bulk,bulk6
EOF

#ipset=/wikipedia.com/wikipedia.org/wiki,wiki6
#ipset=/*.fastly.net/bulk,bulk6



}











ipsets_into_ucidnsmasq() {

    local FN="ipsets_into_ucidnsmasq" #ipsetsintoucidnsmasqdirecttest()
	local tLIST=
	local masqL=

dumpdnsmasqipsetlist | grep -v '^$' | grep -v '^#' | while read tLIST; do
	masqL=
	masqL=$(echo $tLIST | sed 's/^ipset=//g')

    
    setNAMES=$(basename $masqL)
    setNAMES=$(basename $setNAMES | sed 's/,/ /g')
    #echL "setNAMEStest: $setNAMES"
	#echo ">>>>>>>>>>>>DBG: masqL: $masqL" #uci add_list dhcp.@dnsmasq[0].ipset="/sndcdn.com/streaming,streaming6"

	if uci show dhcp | grep ipset | grep -q "$masqL"; then
        [ -n "$DEBUG" ] && echL "uci add_list dhcp.@dnsmasq[0].ipset=\"$masqL\" [present]" msg
	else		
		sanegrep=$(echo $masqL | sed 's!*!\\*!g')
		if uci show dhcp | grep ipset | grep -q "$sanegrep"; then
			[ -n "$DEBUG" ] && echL "uci add_list dhcp.@dnsmasq[0].ipset=\"$masqL\" [present-ast]" msg
		else
			echL "uci add_list dhcp.@dnsmasq[0].ipset=\"$masqL\" [add]" msg
			uci add_list dhcp.@dnsmasq[0].ipset="$masqL"
		fi
	fi

done

    if [ "$(uci changes dhcp | grep 'ipset' | wc -l)" -gt 0 ]; then
        echL "dnsmasq-ipset-additions $(uci changes dhcp | grep 'ipset' | wc -l)" msg
        uci commit dhcp
	    /etc/init.d/dnsmasq restart
	    #echo "#############dbg"; uci changes dhcp | grep 'ipset' #echo "#############dbg"; uci commit dhcp
    else
        [ -n "$DEBUG" ] && echL "no dnsmasq-ipset-additions" msg
    fi

}







echL() {
    
    local MSG="${1}"; shift

    case "${1}" in
        debug) if [ ! -z "$RPI4QOS_DEBUG" ]; then echo "SQM::: $MNAME> $MSG"; fi; ;;
        *) echo "SQM::: $MNAME> $MSG"; ;;
    esac


    case "${1}" in
    log)
        logger -t $MNAME "SQM::: $MNAME> $MSG"; return 0; ;;
    esac #if [ ! -z "$RPI4QOS_LOGGER" ]; then logger -t $MNAME "SQM::: $MNAME> $MSG"; fi

}



















dumpdebugscript() {

    if [ ! -f /bin/qosdebug.sh ]; then
    echL "Create /bin/qosdebug.sh"
#cat <<EOF > /bin/qosdebug.sh


cat <<'EOF' > /bin/qosdebug.sh



#!/bin/sh


if [ "$1" = "revert" ]; then
    cp /etc/config/.dhcp-pre-qos /etc/config/dhcp; /etc/init.d/dnsmasq restart; /etc/init.d/firewall restart; exit 0
fi


if [ "$1" = "erase" ]; then
    :
    exit 0
fi    
if [ "$1" = "help" ]; then
    :
    exit 0
fi
#eraseset


ALLPARAMS=${*}
while [ "$#" -gt 0 ]; do
	case "$1" in
	brief|default)
		sACTION="$1"
	;;
	esac
	shift
done

if [ -z "$sACTION" ]; then sACTION="default"; fi


UPTIMEs="$(uptime)"

TC_dQn=$(tc -d qdisc | wc -l)
SQMRUN=$(/etc/init.d/sqm running 2>/dev/null || echo 1)


#@@@betterdetectisstartupisfbootisreallyrunningornot
if /etc/init.d/sqm enabled; then
	SQMENs=1
fi

if uci show sqm | grep -q ".enabled='1'"; then
	SQMENc=1
fi


if [ -f /var/run/sqm/sqm-run.lock 2>/dev/null ]; then
	SQMRUNl=1
fi


#################################### cleanrun
#/tmp/lock/procd_sqm.lock
#/tmp/run/sqm
#/tmp/run/sqm/eth1.state
#/tmp/run/sqm/eth1.iptables.log
#/tmp/run/sqm/eth1.stop-sqm.log
#/tmp/run/sqm/eth1.start-sqm.log
################################### cat /tmp/run/sqm/eth1.iptables.log nostatix




if (/etc/init.d/sqm enabled; echo $?) | grep -q '0'; then
    isenabled=1
fi
if ! /etc/init.d/sqm status 2>/dev/null | grep -q 'inactive'; then
    isrunning=1
fi #1 on running and stopped :* if (/etc/init.d/sqm running; echo $?) | grep -q '1'; then

if [ "$(uci show sqm | grep 'interface=' | cut -d'=' -f2 | cut -d"'" -f2 | wc -l)" -eq 0 ]; then
    echo "no interfaces installed?"
    uci show sqm
elif [ "$(uci show sqm | grep 'interface=' | cut -d'=' -f2 | cut -d"'" -f2 | wc -l)" -gt 1 ]; then
    echo "more than one interface [using first - wip]"
    uci show sqm | grep 'interface=' | cut -d'=' -f2 | cut -d"'" -f2
fi




sqmscript=$(uci show sqm | grep 'script=' | cut -d'=' -f2 | cut -d"'" -f2)
sqmqdisc=$(uci show sqm | grep 'qdisc=' | cut -d'=' -f2 | cut -d"'" -f2)
sqmint=$(uci show sqm | grep 'interface=' | cut -d'=' -f2 | cut -d"'" -f2 | head -n1)


echo "sqmint: ${sqmint:-unknown} sqmqdisc:${sqmqdisc:-unknown} sqmscript:${sqmscript:-unknown}"



if [ "$(find /tmp/run/sqm/ 2>/dev/null | grep state | wc -l)" -gt 0 ]; then


#for

find /tmp/run/sqm/ 2>/dev/null | grep 'state$' | while read SSS; do
	SSS_1=$(basename $SSS)
	SSS_2=$(echo $SSS_1 | sed 's!.state!!g')
	if ! cat /tmp/run/sqm/$SSS_2.start-sqm.log | grep started | grep -q success; then
		echo "$SSS_2 ISSUES"
	else
		echo "$SSS_2 OK"
	fi
done



fi


#if [ "$(find /tmp/run/sqm/ 2>/dev/null | grep state | wc -l)" -gt 0 ]; then
#    if [ "$(find /tmp | grep 'run/sqm' | grep 'state$' | wc -l)" -gt 0 ]; then SQMstateF=1; fi
#    if [ "$(logread | grep sqm | grep 'This is a bug' | wc -l)" -gt 0 ]; then SQMsFAIL=1; fi
#    if [ ! -z "$SQMsFAIL" ] && [ ! -z "$SQMstateF" ]; then
#        rm -rf /var/run/sqm/sqm-run.lock 2>/dev/null
#        $ecmd "2021 boot reload-sqm workaround isstate:${SQMstateF:-no} failed:$SQMsFAIL"
#    else
#        #$ecmd "2021 boot reload-sqm workaround [notneeded] isstate:${SQMstateF:-no} failed:$SQMsFAIL"
#        echo "2021 boot reload-sqm workaround [notneeded] isstate:${SQMstateF:-no} failed:$SQMsFAIL" > /dev/console
#    fi
#fi


if [ -z "$ALLPARAMS" ]; then #|| sACTION=default
	ALLPARAMS="qdisc httpshits statix ctinfohits"
fi



case "$ALLPARAMS" in
	*state)
echo "TCn:$TC_dQn RUN:$SQMRUN SQMRUNl=${SQMRUNl:-no}"
echo "SQMENs=${SQMENs:-no} SQMENc=${SQMENc:-no}"
echo "enabled:${isenabled:-0} running:${isrunning:-0}"
	;;
esac





echo "############ $sACTION> $UPTIMEs p:$ALLPARAMS"


headerS() {
	echo "############################################################"
	echo "########## ${*} $UPTIMEs"
	echo "############################################################"
}



#echo "###################### tc -s qdisc"; tc -s qdisc; sleep 3
case "$ALLPARAMS" in
	*qdisc*)
		headerS "tc -s qdisc | grep -A13 'Tin 0'"
		tc -s qdisc | grep -A13 'Tin 0'
		sleep 3
	;;
esac







case "$ALLPARAMS" in
	*https)
		(iptables-save -c | grep 443; ip6tables-save -c | grep 443)
	;;
	*httpshits*)
		headerS "HTTPS hits"
		(iptables-save -c | grep 443; ip6tables-save -c | grep 443) | grep -v '0:0'
	;;
esac




case "$ALLPARAMS" in
	*statix*)
		headerS "STATIX hits"
		(iptables-save -c; ip6tables-save -c) | grep -v '0:0' | grep -E '(STATIX|dscptagstatic)'
	;;
esac




case "$ALLPARAMS" in
	*ctinfohits*)
		headerS "ctinfo hits"
		(iptables-save -c; ip6tables-save -c) | grep -v '0:0' | grep QOS_
	;;
esac










exit 0











echo "############ ipv4 #################"
echo "###################### iptables-save -c | grep QOS_MARK | grep -v '0:0'"; iptables-save -c | grep QOS_MARK | grep -v '0:0'
echo "###################### iptables-save -c | grep dscptagstatic | grep -v '0:0'"; iptables-save -c | grep dscptagstatic | grep -v '0:0'
echo ""


echo "############ ipv6 #################"
echo "###################### ip6tables-save -c | grep QOS_MARK | grep -v '0:0'"; ip6tables-save -c | grep QOS_MARK | grep -v '0:0'
echo "###################### ip6tables-save -c | grep dscptagstatic | grep -v '0:0'"; iptables-save -c | grep dscptagstatic | grep -v '0:0'
echo ""




echo "############ $UPTIMEs ############## STATIX"
(iptables-save -c | grep -v '0:0'; ip6tables-save -c | grep -v '0:0') | grep STATIX




echo "############ $UPTIMEs ############## ctorig"
iptables-save -c | grep -E '(\-\-ctorig|\-\-ctrep)'
ip6tables-save -c | grep -E '(\-\-ctorig|\-\-ctrep)'






echo "############ $UPTIMEs ############## match-set"

(iptables-save -c | grep -v '0:0'; ip6tables-save -c | grep -v '0:0') | grep -i match-set



echo "######### 443"
(ip6tables-save -c; iptables-save -c) | grep 443 | grep -v '0:0'



echo ""; echo ""
cat <<VVV
######## (iptables-save -c | grep -v '0:0'; ip6tables-save -c | grep -v '0:0') | grep -i match-set
#####################grep QOS_MARK_F_eth1
######## iptables -nvL; cat /etc/config/sqm; uci show sqm; ifstatus wan; tc -d qdisc; tc -s qdisc
######## SQM_DEBUG=1 SQM_VERBOSITY_MAX=11 /etc/init.d/sqm stop ; SQM_DEBUG=1 SQM_VERBOSITY_MAX=11 /etc/init.d/sqm start
################ tc qdisc add root cake help
VVV


exit 0
#ubus call service list '{ "name": "sqm"  }'
echo "########### OVERRATES"
iptables-save -c | grep QOS_MARK_D
ip6tables-save -c | grep QOS_MARK_D



EOF
chmod +x /bin/qosdebug.sh

else
    [ -n "$DEBUG" ] && echL "Create /bin/qosdebug.sh [exists]"
fi

}

######ip6tables-save -c | grep QOS_MARK_D #grep match-set
#(ip6tables-save -c; iptables-save -c) | 
#echo "###################### ipset -n list"; ipset -n list; sleep 3
#echo "###################### ipset -L ${sLBL}4"; ipset -L "${sLBL}4"
#echo "###################### ipset -L ${sLBL}6"; ipset -L "${sLBL}6" #ipset -L streaming
















write_rtdsfield() { #@hisham not sure if this is still needed or by what exactly

if [ ! -f /etc/iproute2/rt_dsfield ]; then
	echL "/etc/iproute2/rt_dsfield [create]" msg; sleep ${RCSLEEP:-0}
cat <<'EOF' > /etc/iproute2/rt_dsfield
# Differentiated field values
# These include the DSCP and unused bits
0x0     default
# Newer RFC2597 values
0x28    AF11
0x30    AF12
0x38    AF13
0x48    AF21
0x50    AF22
0x58    AF23
0x68    AF31
0x70    AF32
0x78    AF33
0x88    AF41
0x90    AF42
0x98    AF43
# Older values RFC2474
0x20    CS1
0x40    CS2
0x60    CS3
0x80    CS4
0xA0    CS5
0xC0    CS6
0xE0    CS7
# RFC 2598
0xB8    EF
EOF

else	
	[ -n "$DEBUG" ] && echL "/etc/iproute2/rt_dsfield [present]" msg; return 0
fi

}











IPTBOTH() { #no idea why created this but using in places
    ipt ${*}
} #ipt ${*} #ipt "${*}" #iptables "${*}"; ip6tables "${*}"










ipset_do() {

    local FN="ipset_do"
    local fact="${1}"
    local listCOUNT=

	[ -n "$DEBUG" ] && echL "$FN-dbg-init> $fact $2"

    case "$fact" in
    list_save)
            #\n stream out WIP VARSKIPPED >&2 #AKA -> LIST_SAVE_DUMP_NAMES_VALID NOTACTUALLY SAVE
            local lpVAL=
            local lpSET=
            local skVALs=

while read lpSET; do

            missSET=

            if [ ! -z "$RPI4QOS_IPSET_SAVE_excl" ]; then

                    if echo "$RPI4QOS_IPSET_SAVE_excl" | grep -qw "$lpSET"; then
                        #echo "${lpSET}[excluded-exact]"
                        skVALS="${skVALS} ${lpSET}[excluded-exact]"
                        missSET=1
                        continue
                    fi

                    while read lpVAL; do
                    if echo "$lpSET" | grep -q "$lpVAL"; then
                        #echo "$lpSET is excluded-instr"
                        skVALS="${skVALS} ${lpSET}[excluded-instr]"
                        missSET=1
                        continue
                    fi
                done <<MOFF
$(echo "$RPI4QOS_IPSET_SAVE_excl" | tr -s ' ' '\n')
MOFF

            	if [ -z "$missSET" ]; then
                	echo "$lpSET"
            	fi

            fi; #if echo "$PP" | grep -q 'sony'; then continue; fi        

done <<VVV
$(ipset -L -n)
VVV

if [ ! -z "$skVALS" ]; then
    echo "${skVALS}" >&2
fi

    ;;
    


    list_restore)
        :
    ;;



        #remove) #TBA check for references or retval and use swap etc
        #ipset flush sony4; ipset destroy sony4

        
        
    flush)

        if ! ipset -n list | grep -q "^${2}$"; then echL "$FN-$fact> $2 [nolist]"; return 0; fi

        listCOUNT=$(ipset -L "${2}" 2>/dev/null | grep -A230000 'Members' 2>/dev/null | grep -v '^Members:' | wc -l)
        if [ "$listCOUNT" -gt 0 ]; then
            echL "Flushing $2 [$listCOUNT]"; ipset flush $2
        else
            [ -n "$DEBUG" ] && echL "Flushing $2 [${listCOUNT}-noentries]"
        fi
    ;;
    report)
        if ! ipset -n list | grep -q "^${2}$"; then echL "$FN-$fact> $2 [nolist]"; return 0; fi
        listCOUNT=$(ipset -L "${2}" 2>/dev/null | grep -A230000 'Members' 2>/dev/null | grep -v '^Members:' | wc -l)
        if [ "$listCOUNT" -gt 0 ]; then
            #echL "$FN-$fact $2 [$listCOUNT]"
            echL "$2 [$listCOUNT]"
            #ifBACKUP ipset flush $2
        else
            [ -n "$DEBUG" ] && echL "$FN-$fact $2 [${listCOUNT}-noentries]"
        fi

    ;;
    restore) #call before create if ! then ...
        #@@@ if [ -z "$RPI4_QOS_IPSETPERSIST" ]; then
        #if ! ipset -n list | grep -q "^${2}$"; then echL "DBG $FN-$fact> $2 [no-restore-dir]"; return 0; fi
        #echo "RESTORE-init 2:$2 3:$3"; sleep 2


        #echo "INIT $FN $1 $2 $3"; sleep 0.33
        
        
        if [ ! -d "$IPSET_BACKUPd" ]; then echL "DBG $FN-$fact> $2 [no-restore-dir]"; return 1; fi
        if [ -z "$IPSET_BACKUPd" ] || [ ! -d "$IPSET_BACKUPd" ]; then
            echo "BACKUP-NODIR-OR-Z: $IPSET_BACKUPd"
            return 0
        fi
        if [ ! -f "$IPSET_BACKUPd/${2}" ]; then
            echL "DBGGGY $FN-$fact> $2 [no-backup]"
            return 1
        fi


local RESTOREactions=
local RESTOREMSG=
local IPSET_saveF="$IPSET_BACKUPd/${2}"



if [ ! -f "$IPSET_saveF" ]; then
    echo "nofilehere1: $IPSET_saveF"; return 0
fi


if ! ipset -L -n | grep -q "^$2$"; then
    echo "$2 firstseen direct restore (reboot)"
    ipset restore -! < $IPSET_saveF 2>/dev/null
    return 0 #possibly keep going for restoreactionsprint
fi




#IF DIFFERENCE MORE THAN 50 THEN USEALTMETHOD
local iSETrcnt=$(ipset_do recordnum $2)
local iSETfcntPRE=$(ipset_do recordnum $2 $IPSET_saveF)




if [ "$iSETrcnt" -eq 0 ]; then
    : #echo "EMPTYSET"
elif [ "$iSETrcnt" -gt 723 ]; then
    echo "$2 large-set direct restore"
    ipset restore -! < $IPSET_saveF 2>/dev/null #"${ban_ipset}" -q -! restore < "${tmp_file}"
    return 0
################################################ neveronhere-higher
#elif ! ipset -L -n | grep -q "^$2$"; then
#    echo "$2 firstseen direct restore (reboot)"
#    ipset restore -! < $IPSET_saveF 2>/dev/null
#    return 0
fi

#echo "DEBUG PRE RESTORE DIFF-CNT: setN: $iSETrcnt fileN:$iSETfcntPRE"; sleep 2
#if [ "$(($iSETfcntPRE - $iSETrcnt))" -gt 723 ]; then
#    echo "bigrestore"; ipset restore -! < $IPSET_saveF; return 0
#fi





#@excluded? also higher
if [ ! -f "$IPSET_saveF" ]; then
    echo "nofilehere: $IPSET_saveF"
	return 0
else

    
   
    #@firstseen-now?
    if ! ipset -L -n $2 1>/dev/null 2>/dev/null; then
   		(cat $IPSET_saveF 2>/dev/null | head -n1) 2>/dev/null | ipset restore -! 
    	#RESTOREmsg="$RESTOREmsg add-set-$2"
    	RESTOREactions=1
    fi



fi



#set -x #echo "cat "$IPSET_BACKUPd/${2}" 2>/dev/null | grep -v '^create'"
#if [ $(cat "$IPSET_BACKUPd/${2}" | grep -v '^create' | wc -l) -gt 0 ]; then
#exit 0



local RECORD=
local RESTOREcnt=0
local RESTOREchk=0
while read RECORD; do
    [ -z "$RECORD" ] && continue
    #echo "ipset $RECORD"
    if ipset $RECORD 1>/dev/null 2>/dev/null; then
        RESTOREcnt=$((RESTOREcnt + 1)) 
        RESTOREactions=1
    fi
    RESTOREchk=$(($RESTOREchk + 1))
done <<VVV        
$(cat "$IPSET_BACKUPd/${2}" 2>/dev/null | grep -v '^create')
VVV


#else
#    RESTOREcnt=0
#    RESTOREchk=0
#fi
#echo "############# restore $2 [$RESTOREcnt/$RESTOREchk] ${RESTOREMSG}"




if [ ! -z "$RESTOREactions" ]; then
    echo "############# restore $2 [$RESTOREcnt/$RESTOREchk] $RESTOREmsg"
elif [ ! -z "$DEBUG" ]; then
    : #echo "############# restore $2 [$RESTOREcnt/$RESTOREchk] $RESTOREmsg"
fi




#########################echo "ipset -exist $RECORD"; ipset -exist $RECORD
#########echo "RESTORE-init 2:$2 [$RESTOREcnt/$RESTOREchk]"
############ipset -exist add AppleFT $p
#########echo "ipset test $2 $RECORD"; ipset test $2 $RECORD
###########echo "ipset -exist add $2 $RECORD"; ipset -exist $2 $RECORD
##########echo "ret:$?"; ############sleep 1

    ;;





    recordnum) #we already have validated set exists or file exists
        
        
        #echo "DBG recnum 2:$2 3:$3" >&2; sleep 0.11 #!!!>&2


        local RECNUM=

        if [ -f "$3" ]; then
            RECNUM=$(cat $3 | grep -v '^create' | wc -l)
        else
            #@@@ifexists if ! ipset -L -n | grep -q "^${2}"; then
            RECNUM=$(ipset save $2 | grep -v '^create' | wc -l)
        fi
        if [ -z "$RECNUM" ]; then echo 0; else echo $RECNUM;fi

    ;;






    backup)
        #set -x
        #echo "INIT $FN $1 $2 $3"; sleep 0.33
        if [ -z "$IPSET_BACKUPd" ] || [ ! -d "$IPSET_BACKUPd" ]; then
            echo "BACKUP-NODIR-OR-Z: $IPSET_BACKUPd"
            return 0
        fi

	if ! ipset -L -n | grep -q "^${2}"; then
		echL "DBG $FN-$fact> $2 [ipset-not-present]"
		return 1
	fi



        local IPSET_saveF="$IPSET_BACKUPd/${2}"

        if [ ! -f "$IPSET_BACKUPd/${2}" ]; then
            echL "DBG $FN-$fact> $2 [no-backup:$IPSET_saveF]"
        else
            local ISIPSETf=1
        fi

        #??????#if [ -z "$IPSET_BACKUPmode" ]; then #@@@ mode=commontmp_persist || append || fresh || etc
        
        
        ###############################DEBUG header
        #echL "$FN-$1-$2> $IPSET_BACKUPd/${2}" ##### #DBG recordnum setnameORfileBELOW #ipset_do report $2; sleep 0.11


        if [ -z "$ISIPSETf" ]; then

            #####################################METHOD-A-WITH-ELSE
            #ipset save $2 > $IPSET_saveF
            #local saveNUM=$(cat $IPSET_saveF | grep -v '^create' | wc -l)
            #echo "||| ipset save $2 $IPSET_saveF [$saveNUM]"
            ######################sleep 0.11

            #ALTMETHODNOELSEANDAPPENDANYWAY
            ipset save $2 | head -n 1 > $IPSET_saveF

            #POSSIBLENOELSEHEREtoCONTINUEandREPORT
       

        fi
        #else #FORMETHOD-A-ABOVEFULLDUMP-QUICK

        
        
        
#@@@IF DIFFERENCE MORE THAN 50 THEN USEALTMETHOD



            case "${IPSETsaveMETHOD:-append}" in
                append)



local iSETrcnt=$(ipset_do recordnum $2)
local iSETfcntPRE=$(ipset_do recordnum $2 $IPSET_saveF)



#echo "DEBUG PRE RESTORE DIFF-CNT: setN: $iSETrcnt fileN:$iSETfcntPRE"; sleep 2
#if [ "$(($iSETfcntPRE - $iSETrcnt))" -gt 723 ]; then
#    echo "big backup... skip for now"
#    return 0
#fi






#echo "setrecords:$iSETrcnt fcntpre:$iSETfcntPRE"
#############@messy@simpler echL "setrecords: $iSETrcnt fcntpre: $iSETfcntPRE"




if [ "$iSETrcnt" -eq 0 ]; then
    : #echo "EMPTYSET"
elif [ "$iSETrcnt" -gt 723 ]; then
    #echo "$2 large-set skip for now"; return 0
    echo "$2 large-set direct dump"
    ipset save $2 > $IPSET_saveF
    return 0
fi #@!else?



rm /tmp/.ipsetadds.$2 2>/dev/null


local RECORD=                    
while read RECORD; do
    [ -z "$RECORD" ] && continue
    
    
    if echo "$RECORD" | grep -q packets || echo "$RECORD" | grep -q timeout; then #@doh/adblocklists bug #add doh_4 8.8.8.8 packets 24 bytes 1632
        RECORDg=$(echo $RECORD | cut -d' ' -f1-3)
    else
        RECORDg=$(echo $RECORD)
    fi

    if ! grep -Fq "$RECORDg" $IPSET_saveF; then #if ! grep -xFq "$RECORD" $IPSET_saveF; then
        #@simple echo #echo "record: $RECORD [add] $IPSET_saveF"
        echo "$RECORD [add] $IPSET_saveF" >> /tmp/.ipsetadds.$2
        
        echo "$RECORD" >> $IPSET_saveF
    
    else
        : #SONY6000 echL "record: $RECORD [noadd-ok]"
    fi
done <<DDD                 
$(ipset save $2 | grep -v '^create')
DDD




local iSETfcntPOST=$(ipset_do recordnum $2 $IPSET_saveF)


iSETfcntADDED=$(($iSETfcntPOST - $iSETfcntPRE))
#echo "ADDED: $iSETfcntADDED" #####################if [ "$iSETfcntPRE" -eq "$iSETfcntPOST" ]




if [ "$iSETfcntADDED" -eq 0 ] && [ ! -z "$DEBUG" ]; then
    echo "ZEROADDSDBG########## backup> $2 setrecords:$iSETrcnt fcntpre:$iSETfcntPRE added:$iSETfcntADDED"
    cat /tmp/.ipsetadds.$2 2>/dev/null

#20210216 print 0 for a while
elif [ "$iSETfcntADDED" -eq 0 ] && [ -z "$DEBUG" ]; then #@@@notexcluded... shouldnt be here
    #####echo "NOCHANGES ########## backup> $2 setrecords:$iSETrcnt fcntpre:$iSETfcntPRE added:$iSETfcntADDED"
    #####echo "backup> $2 setrecords:$iSETrcnt [nochange]" ########NOCHANGEset="${NOCHANGEset} $2[$iSETrcnt]"
    #echo -n "${NOCHANGEset} $2[$iSETrcnt] " >> /tmp/.ipsetnc
    :
elif [ "$iSETfcntADDED" -gt 0 ]; then
    echo "########## backup> $2 setrecords:$iSETrcnt fcntpre:$iSETfcntPRE added:$iSETfcntADDED"
    cat /tmp/.ipsetadds.$2 2>/dev/null
else
    :
fi

#NOPE handles back in main
#if [ -f /tmp/.ipsetnc ]; then #NOPECUMULATECALLS if [ ! -z "$NOCHANGEset" ]; then echo "$NOCHANGEset"; fi
#    echL "$(cat /tmp/.ipsetnc)"; rm /tmp/.ipsetnc 2>/dev/null
#fi


#sleep 0.11
                ;;


                *)
                    echL "unkownsavemethod"
                ;;
            esac #case "${IPSETsaveMETHOD:-append}" in

        
        

        #fi #END-ELSE-METHOD-A-WASNEW
        

    ;;
    esac

    #DEBUG "reachedend-oops"
}













prereqCHECKA() {

	local FN="prereqCHECKmany"

	#@@@case "$1" in "/"*) shift ;; recheck) shift
	if [ -z "$MNAME" ]; then echL "MNAME@ff empty"; sleep 3; MNAME="onknown"; fi
	local REQff="/root/.${MNAME}.prereq" #local REQff="/root/.$i.prereq"

	local ALLPACKAGES=${*}
	#pINSTALL@main? pINSTOK #######local addPKG=

	if [ -z "$ALLPACKAGES" ]; then return 0; fi
	if ! grep -xFq "${ALLPACKAGES}" "$REQff" 2>/dev/null; then
		#echo "packageschanged: newlist:${ALLPACKAGES} oldlist:$(cat $REQff 2>/dev/null)"
		rm "$REQff" 2>/dev/null
	elif [ -f "$REQff" ]; then
		[ -n "$DEBUG" ] && echL "weve checked already: $REQff" msg
		return 0
	else
		[ -n "$DEBUG" ] && echL "weve NOT checked already: $REQff" msg
	fi


	#echL "$FN>    PACKAGES: $ALLPACKAGES" verbose #+runMSGabove
	for chkPKG in ${ALLPACKAGES}; do
		if [ "$(opkg status ${chkPKG} | wc -l)" -eq 0 ]; then
			pINSTALL="${pINSTALL} ${chkPKG}"; [ -n "$DEBUG" ] && echL "$FN> ${chkPKG} [installqueue]" msg
		else
			pINSTOK="${pINSTOK} ${chkPKG}"; [ -n "$DEBUG" ] && echL "${chkPKG} [onsys]" msg
		fi
	done

	if [ -z "$pINSTALL" ]; then
		echL "Zero packages to add... $pINSTOK" msg; [ -n "$DEBUG" ] && echL "Zero packages to add... touch $REQff" msg
		echo "${ALLPACKAGES}" > "$REQff"
		return 0
	fi

	PKGISSUES="${pINSTALL}"
	if [ ! -z "$PKGISSUES" ]; then
		echo "pre-requisites-missing: $PKGISSUES" && return 1
	else
		return 0; #echL "$FN> adding: ${pINSTALL}" msg
	fi

}














CSINIT() { #MOVEDFROMMAINSETUP-POST-STATIX-SETCREATE_aka_PRERULES -> CALLEDonSTART@[[[p1init/report||(PERSETUPFUNCTION)]]]



CS_ICMP="${CS_ICMP:-"AF33"}" #CS0BE --set-dscp-class EF @ CS_ICMP2 || CS_CONTROL2
CS_ICMP2="${CS_ICMP2:-"EF"}" #@phase1nomatches>tba>class2(aka_limitedICMPclass)




CS_BULK="${CS_BULK:-"CS0"}" #CSBULKA=CS1 > DOWNGRADE CS0
CS_BULK1="${CS_BULK1:-CS1}" ###7 src sep dst plus tcp udp #4-@bulk-set ACS1>CS0downgrade @p1




CS_VOICE="${CS_VOICE:-"CS5"}" #@AF
CS_GAMING="${CS_GAMING:-"CS4"}" #CS3?

CS_LATSENS="${CS_LATSENS:-"CS4"}" #PART2HAD_CS_LAT




CS_STREAMING="${CS_STREAMING:-"CS3"}"



CS_VID="${CS_VID:-"CS3"}" #@AF #PART2_HAS_CS_VIDINT@statixteamvwzoom






CS_CDN="${CS_CDN:-"CS3"}" #@cloudfare~games cs3@vid
CS_CDNB="${CS_CDNB:-"AF21"}" #@cdnother~video






################ PART2IMPORTS
CS_LAT="${CS_LAT:-"CS5"}" ########################################### #O>CS5@>CS4>!AF41@GAMING


CS_VIDINT="${CS_VIDINT:-"CS4"}" #@VIDINTakaSTATICzoomjitsuteamviewer



CS_CONTROL2="EF" #p1altmatchforcontrol
CS_CONTROL="${CS_CONTROL:-CS5}" #NOTE CS_ICMP2 and CS_CONTROL2 inline below@upper-rules @part2
UDPCONTROLPT="53,5353,123,67,68"
TCPCONTROLPT="53,5353,22"

##############@TORRENT_STATIC_PART2 ###############################CS_BULK=${CS_BULK:-CS1}
############################################NOTE NON-CS0 bypasses QOS_F_eth1 REMARKS@-m dscp 0x00
CS_TORRENT="${CS_TORRENT:-"CS1"}"
UDPBULKPT="51413"
TCPBULKPT="51413,6881:6889"





if [ -n "$RPI4QOS_VERBOSE" ]; then

#CS_report() {
cat <<TTT


CS_BULK="${CS_BULK:-"CS0"}"         #############################3#CSBULKA=CS1 > DOWNGRADE CS0 #NOTE+CS_TORRENT
CS_BULK1="${CS_BULK1:-CS1}"         ################# p1 7 src sep dst plus tcp udp #4-@bulk-set ACS1>CS0downgrade


CS_ICMP="${CS_ICMP:-"AF33"}"        ################################CS0BE --set-dscp-class EF @ CS_ICMP2 || CS_CONTROL2
CS_ICMP2="${CS_ICMP2:-"EF"}"        ######################################## @p1nomatches>tba>class2(aka_limitedICMPclass)

CS_VOICE="${CS_VOICE:-"CS5"}" #@AF


CS_CDN="${CS_CDN:-"CS3"}"           #################################### p1 @cloudfare~games cs3@vid
CS_CDNB="${CS_CDNB:-"AF21"}"        #################################### p1 @cdnother~video

CS_GAMING="${CS_GAMING:-"CS4"}"     #################################### p1 CS3?>CS_GAMING1 CS_GAMING2 CS_GAMINGCACHE

CS_LATSENS="${CS_LATSENS:-"CS4"}"
CS_STREAMING="${CS_STREAMING:-"CS3"}"
CS_VID="${CS_VID:-"CS3"}" #@AF

########################################################PRINTONLY@SECTION2||FRAGMENTED

CS_CONTROL2="EF" #p1altmatch/class for control
CS_CONTROL="${CS_CONTROL:-CS5}" #NOTE CS_ICMP2 and CS_CONTROL2 inline below@upper-rules
UDPCONTROLPT="53,5353,123,67,68"
TCPCONTROLPT="53,5353,22"


CS_LAT="${CS_LAT:-"CS5"}"           ################################### p2 #O>CS5@>CS4>!AF41@GAMING
CS_VIDINT="${CS_VIDINT:-"CS4"}"     ################################### p2 STATIX_TEAMVW_ZOOM


#######@statixtorrents~bulk #NOTE NON-CS0 bypasses QOS_F_eth1 REMARKS@-m dscp 0x00
CS_TORRENT="${CS_TORRENT:-"CS1"}"; UDPBULKPT="51413"; TCPBULKPT="51413,6881:6889"

TTT
#CS_="${CS_TORRENT:-"CS1"}"


#####################PHASE2DUPES
#CS_LAT=${CS_LAT:-CS5}
#CS_BULK=${CS_BULK:-CS2}



#}



#CS_report


fi
#sleep 5

}


















MNAME="rpi4.qos" #MNAME="ctinfo_4layercake_rpi4.qos"

PACKAGES="ipset dnsmasq-full iptables-mod-extra iptables-mod-conntrack-extra iptables-mod-hashlimit iptables-mod-ipopt kmod-sched-ctinfo iptables-mod-conntrack-extra"
if ! prereqCHECKA ${PACKAGES}; then exit 0; fi #if [ ! -f "$FFmP" ]; then #@@@start? #fi #iptables-mod-geoip



eval `grep '^RPI4QOS_DEBUG=' /root/wrt.ini 2>/dev/null`
if [ ! -z "$RPI4QOS_DEBUG" ]; then
    INIMSGoptsON="${INIMSGoptsON} RPI4QOS_DEBUG"
    RCSLEEP=1
    RPI4QOS_VERBOSE=1
else
    INIMSGoptsOFF="${INIMSGoptsOFF} RPI4QOS_DEBUG"
fi



eval `grep '^RPI4QOS_LOGGER=' /root/wrt.ini 2>/dev/null`
if [ ! -z "$RPI4QOS_LOGGER" ]; then #@echL-CURRENTLYOFF@log
    INIMSGoptsON="${INIMSGoptsON} RPI4QOS_LOGGER"
else
    INIMSGoptsOFF="${INIMSGoptsOFF} RPI4QOS_LOGGER"
fi


eval `grep '^RPI4QOS_RECLASSIFY_SH=' /root/wrt.ini 2>/dev/null`
if [ ! -z "$RPI4QOS_RECLASSIFY_SH" ]; then #@echL-CURRENTLYOFF@log
    if [ -f "$RPI4QOS_RECLASSIFY_SH" ]; then #@@@WARNifNOTinSYSUPGRADE.conf
        : #echL "RPI4QOS_RECLASSIFY_SH=\"$RPI4QOS_RECLASSIFY_SH\" [ok]"
    else
        echL "RPI4QOS_RECLASSIFY_SH=\"$RPI4QOS_RECLASSIFY_SH\" [no-file]"
        RPI4QOS_RECLASSIFY_SH=
    fi
    #else
fi
#NOTE: movetostart/stop && handle errors







######### GAMINGPARAMS
eval `grep '^RPI4QOS_VOIP_MACS=' /root/wrt.ini 2>/dev/null`
if [ ! -z "$RPI4QOS_VOIP_MACS" ]; then
    INIMSGvoipON="${INIMSGgameON} RPI4QOS_VOIP_MACS"
else
    INIMSGvoipOFF="${INIMSGgameFF} RPI4QOS_VOIP_MACS"
fi










######### GAMINGPARAMS
eval `grep '^RPI4QOS_GAMING_MACS=' /root/wrt.ini 2>/dev/null`
if [ ! -z "$RPI4QOS_GAMING_MACS" ]; then
    DSCPMONMACS="${RPI4QOS_GAMING_MACS}"
    #INIMSG="${INIMSG} RPI4QOS_GAMING_MACS"
    INIMSGgameON="${INIMSGgameON} RPI4QOS_GAMING_MACS"
else
    INIMSGgameOFF="${INIMSGgameFF} RPI4QOS_GAMING_MACS"
    #INIMSGoff="${INIMSGoff} RPI4QOS_GAMING_MACS"
fi











eval `grep '^RPI4QOS_GAMING_LEARNCONNECTIONS=' /root/wrt.ini 2>/dev/null`
if [ ! -z "$RPI4QOS_GAMING_LEARNCONNECTIONS" ]; then
    DSCPMONLEARNCONNECTIONS=1
    INIMSGgameON="${INIMSGgameON} RPI4QOS_GAMING_LEARNCONNECTIONS"
else
    #INIMSGoff="${INIMSGoff} RPI4QOS_GAMING_LEARNCONNECTIONS"
    INIMSGgameOFF="${INIMSGgameOFF} RPI4QOS_GAMING_LEARNCONNECTIONS"
fi






eval `grep '^RPI4QOS_GAMING_IPS_4=' /root/wrt.ini 2>/dev/null`
if [ ! -z "$RPI4QOS_GAMING_IPS_4" ]; then
    DSCPMONIPS_4="$RPI4QOS_GAMING_IPS_4"
    INIMSGgameON="${INIMSGgameON} RPI4QOS_GAMING_IPS_4" #INIMSG="${INIMSG} RPI4QOS_GAMING_IPS_4"
else
    INIMSGgameOFF="${INIMSGgameOFF} RPI4QOS_GAMING_IPS_4" #INIMSGoff="${INIMSGoff} RPI4QOS_GAMING_IPS_4"
fi #DSCPMONIPS_4="10.2.3.220"


eval `grep '^RPI4QOS_GAMING_IPS_6=' /root/wrt.ini 2>/dev/null`
if [ ! -z "$RPI4QOS_GAMING_IPS_6" ]; then
    DSCPMONIPS_6="$RPI4QOS_GAMING_IPS_6"
    INIMSGgameON="${INIMSGgameON} RPI4QOS_GAMING_IPS_6" #INIMSG="${INIMSG} RPI4QOS_GAMING_IPS_4"
else
    INIMSGgameOFF="${INIMSGgameOFF} RPI4QOS_GAMING_IPS_6" #INIMSGoff="${INIMSGoff} RPI4QOS_GAMING_IPS_6"
fi #DSCPMONIPS_6="10.2.3.220"









#@@@@@@@case "${IPSETsaveMETHOD:-append}" in

eval `grep '^IPSET_BACKUPd=' /root/wrt.ini 2>/dev/null`
IPSET_BACKUPd="${IPSET_BACKUPd:-"/etc/custom/firewall/dscp/backup"}" #NOTE: bypassed fallback to tmp below
#IPSET_BACKUPd="/etc/custom/firewall/dscp/backup" #/etc/custom/firewall/dscp/backup #!!! :-/tmp/ipsetbackup@quickrestoremode||fresh
if [ ! -z "${IPSET_BACKUPd}" ]; then
    #INIMSG="${INIMSG} IPSET_BACKUPd=\"$IPSET_BACKUPd\""
    if [ ! -d "$IPSET_BACKUPd" ]; then
        echL "Create ipset-backup-directory: $IPSET_BACKUPd"
        #mkdir -p "${IPSET_BACKUPd}"
    fi
else
    IPSET_BACKUPd="${IPSET_BACKUPd:-"/etc/custom/firewall/dscp/backup"}"
    INIMSGoff="${INIMSGoff} IPSET_BACKUPd=\"default\""
fi


if [ -z "$IPSET_BACKUPd" ]; then #setafallback #MOVETOMAINWAS@ipset_do backup(lots-o-calls)
        echL "DBG $FN-$fact> $2 [using-tmp-ipset-backupd:/tmp/ipset-backup]"
        IPSET_BACKUPd="/tmp/ipset-backup"
fi
if [ ! -d "$IPSET_BACKUPd" ]; then
        echL "DBG $FN-$fact> $2 [no-restore-dir]"        
        mkdir -p $IPSET_BACKUPd
fi



mkdir -p "${IPSET_BACKUPd}"



if [ ! -z "$IPSET_BACKUPd" ] && [ -d "$IPSET_BACKUPd" ]; then #@@@ifPERISTRESTOREonMOVEsomewhereONCE
    if ! grep -Fq "$IPSET_BACKUPd" /etc/sysupgrade.conf; then
        #echL "persist: $IPSET_BACKUPd [no-sysupgrade.conf]"
        echo "$IPSET_BACKUPd" >> /etc/sysupgrade.conf
    fi
fi




eval `grep '^RPI4QOS_IPSETPERSIST=' /root/wrt.ini 2>/dev/null`
#eval `grep '^RPI4QOS_IPSETPERSIST_LIST=' /root/wrt.ini 2>/dev/null`

if [ ! -z "$RPI4QOS_IPSETPERSIST_LIST" ]; then #UNUSED? @>SAVE||RESTORE_excl
    INIMSG="${INIMSG} RPI4QOS_IPSETPERSIST_LIST"
#else
#    INIMSGoff="${INIMSGoff} RPI4QOS_IPSETPERSIST_LIST"
elif [ ! -z "$RPI4QOS_IPSETPERSIST" ]; then
    INIMSG="${INIMSG} RPI4QOS_IPSETPERSIST"
else
    INIMSGoff="${INIMSGoff} RPI4QOS_IPSETPERSIST[off]" #INIMSGoff="${INIMSGoff} RPI4QOS_IPSETPERSIST/_LIST[off]"
fi
######################if [ ! -z "$RPI4QOS_IPSETPERSIST" ] || [ ! -z "$RPI4QOS_IPSETSAVE" ]; then
#####################@@@-? if [ -z "$RPI4QOS_IPSETPERSIST_LIST" ]; then #if this then ELIF ^


#echL "RPI4QOS_IPSETPERSIST=1 staticon"; sleep 3; RPI4QOS_IPSETPERSIST=1
#echL "RPI4QOS_IPSETPERSIST=1 static OFF"; sleep 3; RPI4QOS_IPSETPERSIST=
#####################@@@SAVE=PERSIST@off do save stage @ append||overwrite = all@!>somewherelse
#####################sqmdscp_localnets4 [3] sqmdscp_localnets6 [5] ############ steam4? #doh_ all?
###@@@?RPI4QOS_IPSET_SAVE_excl= ; RPI4QOS_IPSET_RESTORE_excl=
#RPI4QOS_IPSET_SAVE_excl="sony4 sqmdscp_"; RPI4QOS_IPSET_RESTORE_excl="sony4 sqmdscp_"


RPI4QOS_IPSET_SAVE_excl="sony4 sqmdscp_ yoyo firehol debl bogon darklist drop threat voip_4"
RPI4QOS_IPSET_RESTORE_excl="sony4 sqmdscp_ yoyo firehol debl bogon darklist drop threat voip_4 gamingdevice"




#voip_4 no showing in maincount








case "$0" in
    /usr/lib/sqm/start-sqm) IS_SQMCALL="start"; ;;
    /usr/lib/sqm/stop-sqm) IS_SQMCALL="stop"; ;;
    *)
        echo "RPI4QOS-CONS-CALL-?> $0 ${*} $(cat /proc/$PPID/cmdline)" > /dev/console
        IS_SQMCALL="unknown-$0-${*}"
    ;;
esac #echo "RPI4QOS-CONS-CALL-STOP> $0 ${*} $(cat /proc/$PPID/cmdline)" > /dev/console




echL "################################################## $IS_SQMCALL"
case "$IS_SQMCALL" in

    stop) #set > /tmp/CAKE-set-stop

        if [ ! -z "$RPI4QOS_IPSETPERSIST" ]; then
            echL "        IPSET_BACKUPd: [on:$IPSET_BACKUPd]"
            if [ ! -z "$RPI4QOS_IPSET_SAVE_excl" ]; then
                echL "       IPSET_SAVEexcl: $RPI4QOS_IPSET_SAVE_excl"
            fi
        fi #if [ ! -z "$RPI4QOS_IPSET_SAVE_excl" ] && [ ! -z "$RPI4QOS_IPSETPERSIST" ]; then


        #if [ ! -z "$RPI4QOS_IPSETPERSIST" ]; then #@ADD-SEPERATE-SAVE-ALSO-BELOW-NEEDSandAPPENDvsOVERWRITEoption
        ###?if [ ! -z "$RPI4QOS_IPSETPERSIST" ] || [ ! -z "$RPI4QOS_IPSETSAVE" ]; then #@names or all
        if [ ! -z "$RPI4QOS_IPSETPERSIST" ]; then

            #MOVEUP echL "ipsetpersist-backup [on:$IPSET_BACKUPd]"

            
            #ipset -L -n | while read PP; do
            while read PP; do
            
                [ -z "$PP" ] && continue
                EXCLUDED=

                if [ ! -z "$RPI4QOS_IPSET_SAVE_excl" ]; then
                    if echo "$RPI4QOS_IPSET_SAVE_excl" | grep -qw "$PP"; then
                        [ -n "$RPI4QOS_VERBOSE" ] && echo "$PP is excluded-exact"
                        EXCLUDED=1
                        continue
                    fi
                    while read excVAL; do
                    if echo "$PP" | grep -q "$excVAL"; then
                        [ -n "$RPI4QOS_VERBOSE" ] && echo "$PP is excluded-instr"                        
                        EXCLUDED=1
                        continue
                        #echo "MOFF: EXCLUDED: $EXCLUDED"
                    fi
                done <<MOFF
$(echo "$RPI4QOS_IPSET_SAVE_excl" | tr -s ' ' '\n')
MOFF

                fi 
                if echo "$PP" | grep -q 'sony'; then continue; fi
                
                if [ -z "$EXCLUDED" ]; then
                    #echo "MOFF2: EXCLUDED: $EXCLUDED"
                    ipset_do backup $PP #echo "ipset_do backup $PP"; sleep 0.11
                fi


            done <<CCC
$(ipset -L -n)
CCC


        else
            echL "ipsetpersist-backup [off:$IPSET_BACKUPd]"
        fi

        
        
        if [ ! -z "$RPI4QOS_RECLASSIFY_SH" ]; then #@echL-CURRENTLYOFF@log
            echL "running $RPI4QOS_RECLASSIFY_SH $IS_SQMCALL"
            sh "$RPI4QOS_RECLASSIFY_SH" $IS_SQMCALL
        fi



    ;; #ENDSTOP





#################################NOTEGOESINSETUPAFTERINITIALSETCREATEorSIMILAR #set > /tmp/CAKE-set-start

    start)

#IPSET_
if [ ! -z "$INIMSG" ]; then #WASnowblankishORtbaGENERAL/derived
    echL "$INIMSG [on]"
fi
if [ ! -z "$INIMSGoff" ]; then #forGAMINGoffWASnowblankishORtbaGENERAL/derived
    echL "$INIMSGoff [off@/root/wrt.ini]"
fi


if [ ! -z "$RPI4QOS_IPSET_RESTORE_excl" ] && [ ! -z "$RPI4QOS_IPSETPERSIST" ]; then
    echL "    IPSET_RESTOREexcl: $RPI4QOS_IPSET_RESTORE_excl"
fi #@stop if [ ! -z "$RPI4QOS_IPSET_SAVE_excl" ]; then




#if [ ! -z "$INIMSGoptsON" ]; then
    echL "       OPTS_EXTRA> ${INIMSGoptsON:-none} [on] ${INIMSGoptsOFF:-none} [off]"
#fi


if [ -z "${INIMSGgameON}" ]; then
    echL "        OPTS_GAME> RPI4_QOS_GAMING_(MACS|LEARNCONNECTIONS|IPS_6|IPS_4) none"
else
    echL "        OPTS_GAME> ${INIMSGgameON:-none} [on] ${INIMSGgameOFF:-none} [off]"
fi





CSINIT #PARKHERE_MAYBEMOVEBACKTOEACHFUNTIONorADD_PARAMS




if [ ! -z "$RPI4QOS_IPSETPERSIST" ]; then
        echL "        IPSET_BACKUPd: [on:$IPSET_BACKUPd]"
        sleep ${RCSLEEP:-0}
fi #if [ ! -z "$RPI4QOS_IPSET_SAVE_excl" ] && [ ! -z "$RPI4QOS_IPSETPERSIST" ]; then
#if [ ! -z "$RPI4QOS_IPSET_SAVE_excl" ]; then #fi




#if [ ! -z "$RPI4QOS_IPSETPERSIST" ] || [ ! -z "$RPI4QOS_IPSETRESTORE" ]; then #@names or all
if [ ! -z "$RPI4QOS_IPSETPERSIST" ]; then #@names or all

    #MOVEUP echL "ipsetpersist-restore [on:$IPSET_BACKUPd]"

    if [ ! -z "$IPSET_BACKUPd" ] && [ -d "$IPSET_BACKUPd" ]; then
        if [ $(find $IPSET_BACKUPd -type f | wc -l) -gt 0 ]; then
            for iptSfile in $(find $IPSET_BACKUPd -type f); do
                iptSname=$(basename $iptSfile)
                
                EXCLUDED=
                if [ ! -z "$RPI4QOS_IPSET_RESTORE_excl" ]; then

                    if echo "$RPI4QOS_IPSET_RESTORE_excl" | grep -qw "$iptSname"; then
                        [ -n "$RPI4QOS_VERBOSE" ] && echo "$iptSname is excluded"
                        EXCLUDED=1
                        continue
                    fi

                    while read excVAL; do
                    if echo "$iptSname" | grep -q "$excVAL"; then
                        [ -n "$RPI4QOS_VERBOSE" ] && echo "$iptSname is excluded-instr"
                        EXCLUDED=1
                        continue
                    fi
                done <<MOFF
$(echo "$RPI4QOS_IPSET_RESTORE_excl" | tr -s ' ' '\n')
MOFF
                
                fi 
               
                if [ -z "$EXCLUDED" ]; then
                    ipset_do restore $iptSname
                #sleep 0.11
                fi

            done
        else
            echo "no-set-backups@$IPSET_BACKUPd"
        fi
    else
        echo "no-set-backupd"
    fi
else
    echL "ipsetpersist-restore [off:$IPSET_BACKUPd]"
fi

#echo "############## TEST ipset_do list_save"; sleep 2; ipset_do list_save; sleep 2 #@> exclude_sets()

    ;; #ENDSTART

esac


#echL "#####################"
sleep ${RCSLEEP:-0}










ipt_setup() {



    
    # Configure iptables chains to mark packets #    ipt_destruct #MOVEDTOBOTTOMFUNC
    ipt -t mangle -N QOS_CAKE_${IFACE}
    ipt -t mangle -N QOS_MARK_F_${IFACE}
    ipt -t mangle -N QOS_MARK_F_REMAP_${IFACE}
    ipt -t mangle -N QOS_MARK_D_${IFACE}
    ipt -t mangle -N QOS_MARK_D_orig_${IFACE}
    ipt -t mangle -N QOS_MARK_D_repl_${IFACE}


    ########### pre-setup>setup
    if [ ! -f /etc/config/.dhcp-pre-qos ]; then cp /etc/config/dhcp /etc/config/.dhcp-pre-qos; fi #@qosdebug.sh 'restore'
    dumpdebugscript #@+ipt-namelist-var
    write_rtdsfield




    echL "IFACE:$IFACE $IS_SQMCALL SUBNET:$SUBNET PREFIX:$PREFIX ${ifc_wan6}"
    #echL "ip4>SUBNET:$SUBNET ip6> ifc_wan6:${ifc_wan6} PREFIX:$PREFIX" debug
    if [ -n "$RPI4QOS_VERBOSE" ]; then
        #echL "################################## INGRESS"
        echL "IGNORE_DSCP_INGRESS:$IGNORE_DSCP_INGRESS ZERO_DSCP_INGRESS:$ZERO_DSCP_INGRESS"
        echL "INGRESS_CAKE_OPTS:$INGRESS_CAKE_OPTS IQDISC_OPTS:$IQDISC_OPTS"
        echL "EGRESS_CAKE_OPTS:$EGRESS_CAKE_OPTS EQDISC_OPTS:$EQDISC_OPTS"
        ############################echL "INGRESS_CAKE_OPTS:$INGRESS_CAKE_OPTS EGRESS_CAKE_OPTS:$EGRESS_CAKE_OPTS"
        echL "SHAPER_BURST_DUR_US:$SHAPER_BURST_DUR_US SHAPER_QUANTUM_DUR_US:$SHAPER_QUANTUM_DUR_US" debug
        echL "THRESH CONNBDN:$CONNBDN CONNBUP:$CONNBUP" debug
    fi #ENDVERBOSEHEADER




############################################### example here if you needed to do port 'ip'sets ############ ORIGINAL_SAMPLE
#ipset -exist create AppleFT bitmap:port range 3478-16402
#plist="3478-3497 16384-16387 16393-16402"
#for p in $plist ; do
#	ipset -exist add AppleFT $p
#done
################################################################## ipv4-hostnames->'ip'-set
#ipset -q add Bulk4 SkyQ ############ Skybox
#ipset -q add Vid4  bluray ########## Bluray
#ipset -q add Vid4  av-amp ########## AV-Amp
############ ORIGINAL_SAMPLES








#@?add'check/setup'+call=flush-sep ### dumpdebugscript #mayneediptnames-moveupandfailfriendly



#needs to remove more than just macmatch waste of resources@ini mac toggled backoff
#aka -z MACS probable 'teardown' from flush if off
######-A FORWARD -m set --match-set gamingdevice6 dst -j SET --add-set gamingdevice6traf src,src --exist






#########################################originalimportedvars-nowused@populatedvia-iniAKAindirectly-nousermoddingneeded
#sLBL="monuncommon"; DSCPMONIPS_4="10.2.3.220"; DSCPMONIPS_6="10.2.3.220"; DSCPMONLEARNCONNECTIONS=1; DSCPMONMACS="aa:bb"
######################################################################################################################


sLBL="gamingdevice" #sets consoles4+6existorexitCAREFULLITSSTATICINFUNCTIONtmp#?DSCPMONTRAFIGNOREPORTSdT="443"
                                                                                        #?DSCP_PORTs4_TCP_CS0=""
dynamicipset_setup "flush" #this-if-for-re-runs->possiblyputinteardown-deinit-etc #@@@if? ONLYHANDLING-'GAMING'

#-USECSMOD@ethtool







################################################## NONORIGINAL?(most?) NOTUSEDbyMEbutHASrulesDEPENDINGon
ipset -q create Bulk4 hash:ip
ipset -q create BE4 hash:ip
ipset -q create Voice4 hash:ip
ipset -q create Vid4 hash:ip
ipset -q create Zoom4 hash:ip
###
ipset -q create Bulk6 hash:ip family inet6
ipset -q create BE6 hash:ip family inet6
ipset -q create Voice6 hash:ip family inet6
ipset -q create Vid6 hash:ip family inet6
ipset -q create Zoom6 hash:ip family inet6
################################################## NONORIGINAL
################################################## NONORIGINAL we need to add these ahead of dnsmasq for iptables rules to take
################################################## NONORIGINAL
########################################################################
ipset -q create streaming hash:ip
ipset -q create streaming6 hash:ip family inet6
###
ipset -q create bulk hash:ip
ipset -q create bulk6 hash:ip family inet6
###
ipset -q create latsens hash:ip #ipset -q create latsens4 hash:ip
ipset -q create latsens6 hash:ip family inet6
###
ipset -q create usrcdn hash:ip
ipset -q create usrcdn6 hash:ip family inet6
###### this one is pretty massive / untested / needs classify tweaking ... is it bulk/gametraf + @microsoft and overlap@other-set/s
###########ipset create f2b-recidive -exist hash:ip hashsize 32768 maxelem 80000
ipset -q create gamecache4 hash:ip hashsize 32768 maxelem 80000
#ipset -q create gamecache4 hash:ip
ipset -q create gamecache6 hash:ip family inet6
#######################################################################
########################################################################
#######################################################################
###@@@TESTMATCHCOMBINED>TOGGLEDOFF@iptables
ipset -q create latsensitive list:set
ipset -q add latsensitive latsens
ipset -q add latsensitive latsens6
###@@@TESTMATCHCOMBINED
#######################################################################
########################################################################NEVERUSED-PROPOSED-NAMING
#ipset -q create sqmdscp_builtin_streaming hash:ip
#ipset -q create sqmdscp_builtin_streaming6 hash:ip family inet6
#@@@ latsens_portsUDP
#@@@ latsens_portsTCP
#@@@ latsens6_portsUDP
#@@@ latsens6_portsTCP
########################################################################NEVERUSED-PROPOSED-NAMING

#fi #endPERSISTwraptest








####################################################################### cloudflare inline ##@@@setup+verboseifnew HACKBELOW
#INLINE-EXAMPLE_for_CLOUDFLARE6-note: 20210121 update@monthly? or call external script
plist="103.31.4.0/22 108.162.192.0/18 131.0.72.0/22 198.41.128.0/17 103.21.244.0/22 104.16.0.0/12 162.158.0.0/15 188.114.96.0/20 172.64.0.0/13 173.245.48.0/20 141.101.64.0/18 190.93.240.0/20 103.22.200.0/22 197.234.240.0/22"
ipset -exist create cloudflare-v4 hash:net
for p in $plist ; do
	ipset -exist add cloudflare-v4 $p
done
plist="2803:f800::/32 2405:8100::/32 2606:4700::/32 2405:b500::/32 2c0f:f248::/32 2400:cb00::/32 2a06:98c0::/29"
ipset -exist create cloudflare-v6 hash:net family inet6
for p in $plist ; do
	ipset -exist add cloudflare-v6 $p
done
#######################################@@@testcontainer
ipset -q create cloudflare list:set
ipset -q add cloudflare cloudflare-v4
ipset -q add cloudflare cloudflare-v6



###################################################3################################# nethash-sample-v4
###########3twentyfourthousandrecords@ipset create sony4 -exist hash:ip hashsize 32768 maxelem 80000
SONYIPv4="63.241.6.48/29
63.241.60.40/29
64.37.128.0/18
69.153.161.16/28
199.107.70.72/29
199.108.0.0/20
199.108.192.0/20"
ipset create sony4 -exist nethash hashsize 32768 maxelem 80000
for p in $SONYIPv4 ; do
	ipset -exist add sony4 $p
done


###################################################3################################# steam-v4-inline
STEAMIPv4="24.89.185.8/29
49.143.234.0/24
63.98.16.176/29
63.145.202.0/28
63.146.183.0/26
63.150.152.136/29
63.224.0.0/13
63.236.12.136/29
63.236.79.96/29
63.236.98.112/29
63.236.109.96/29
65.113.241.32/28
65.122.178.64/28
66.77.143.136/29
67.132.200.128/26
67.134.197.240/28
67.134.199.64/28
67.135.39.128/26
68.142.64.0/18
68.177.101.0/25
69.28.128.0/18
72.165.61.128/26
77.67.56.160/27
77.67.60.32/27
77.67.60.128/29
77.67.60.152/29
77.67.61.232/30
77.67.107.100/30
81.171.115.0/27
81.171.115.32/29
87.248.192.0/19
103.10.124.0/23
103.28.54.0/23
117.121.248.0/21
146.66.152.0/23
146.66.155.0/24
146.66.156.0/23
162.254.192.0/21
185.25.180.0/23
192.69.96.0/22
199.229.227.120/29
203.77.184.0/21
204.63.214.0/23
207.159.120.144/28
207.173.176.0/22
208.64.200.0/22
208.78.164.0/22
208.111.128.0/18
209.3.157.112/29
213.202.254.128/28
213.202.254.192/28
216.190.227.0/24
216.207.205.96/28
"
ipset create steam4 -exist nethash hashsize 32768 maxelem 80000
for p in $STEAMIPv4 ; do
	ipset -exist add steam4 $p
done







ipsets_into_ucidnsmasq #ipsetsintoucidnsmasqdirecttest          #ADDS-IPSETS-to-ETC_CONFIG_DHCPandRESTARTS_DNSMASQIFNEEDED

dynamicipset_setup #topaddconsoledynamicipsetstraf              #ADDS-FIREWALLRULES-RELATEDTO'GAMING-MAC-LEARNING-IPSETS-ETC'@if?



if [ -n "$RPI4QOS_VERBOSE" ]; then

ipset -L -n | while read PP; do #moverestorehere-prints-numrecords-livesets
    #if echo "${RPI4QOS_IPSET_SAVE_excl:-ANON}" | grep -q "$PP"; then continue; fi
    #if echo "${RPI4QOS_IPSET_RESTORE_excl:-ANON}" | grep -q "$PP"; then continue; fi
    case "$PP" in
        debl_4|firehol3_4|yoyo_4|bogon_6|voip_4|darklist_4)
            continue
        ;;
    esac
    ipset_do report $PP
done #ipset_do report cloudfare-v6


fi #END_VERBOSE_PRINTSETCOUNTS





#######################@compat?
UPRATE=$UPLINK
DOWNRATE=${DOWNLINK}








########################################## original-notes-ldir >>>>>>>>>>> 'non-dynamic, fixed' rules
# Change DSCP of relevant hosts/ports and save the DSCP to the connmark using savedscp
# eg.  I have a skybox which only does downloads & never streams, make it bulk
# I have a bluray player that speaks netflix/amazon, so it streams and never downloads, make it video
# I have a bittorrent host, so make that host/port combination bulk.
# I have some dynamically updated ipsets filled by dnsmasq for Bulk, video & voice, so classify if they match
# In fact since we already have the ipset based rules, just add local hosts to the relevant set.
# Qnap have just done something interesting in that they've set DSCP LE on their Hybrid Backup Sync
# application.  Presently I jealously guard LE for bittorrent (something I regard as lowest priority in
# the world) thus Qnap's decision to make my backups LE as opposed to my preferred BK (bulk) meant I
# needed to create a 'packet has a DSCP but I'd like to re-map it to something else' chain.
########################################## original-notes-ldir
########################################################################################ORIGINAL
################## if it's DSCP LE and from my backup box then re-map to BK.
#ipt  -t mangle -A QOS_MARK_F_REMAP_${IFACE} -m dscp --dscp 0x01 -p tcp -s waldorf -j DSCP --set-dscp-class CS1
################## save it
#ipt -t mangle -A QOS_MARK_F_REMAP_${IFACE} -j CONNMARK --set-dscpmark 0xfc000000/0x03000000
################# and out - that was easy!
###########JUMPTOHOOK QOS_MARK_F_${IFACE} starts here
# if dscp!= 0 then goto QOS_MARK_F_REMAP_${IFACE} ie. special case packets that already have a DSCP
#ipt  -t mangle -A QOS_MARK_F_${IFACE} -m dscp ! --dscp 0x00 -g QOS_MARK_F_REMAP_${IFACE}
########################################################################################ORIGINAL








#@start) CSINIT #PARKHERE_MAYBEMOVEBACKTOEACHFUNTIONorADD_PARAMS #CS_DEFINES_MOVEDOUTSIDE_FUNCTION













ipt -t mangle -A QOS_MARK_F_REMAP_${IFACE} -j CONNMARK --set-dscpmark 0xfc000000/0x03000000
#ENTERHOOK #NOTE: 'g' dscp!=0-gotospecialpacketsalready have a DSCP
ipt  -t mangle -A QOS_MARK_F_${IFACE} -m dscp ! --dscp 0x00 -g QOS_MARK_F_REMAP_${IFACE}





###!!!NOTE: -A vs -I
#@@@CS2+conbytesover?ipt  -t mangle -A QOS_MARK_F_REMAP_${IFACE} -m dscp --dscp 0x01 -p tcp -s waldorf -j DSCP --set-dscp-class CS1
########################################################################### TESTINGTHIS 18=streaming



###################################### LOWER>d~below-I @SYN OUT=eth1 dst #####DSCPstaticCHAIN="dscptagstatic" 
setuptagstatic
IPTBOTH -t mangle -A QOS_MARK_F_${IFACE} -m dscp --dscp 0x00 -j dscptagstatic





############################################################### ipv4 host bitorrent sample rules
# Bittorrent box - has to be done explicitly because we're looking at specific ports not just whole host
###$IPTABLES -t mangle -A QOS_MARK_F_${IFACE} -p tcp -s waldorf -m tcp -m multiport --sports 6981,4433 -m comment --comment "BT DSCP LE" -j DSCP --set-dscp 1
###$IPTABLES -t mangle -A QOS_MARK_F_${IFACE} -p udp -s waldorf -m udp --sport 6981 -m comment --comment "BT DSCP LE" -j DSCP --set-dscp 1









##################### TORRENT ############# the destination versions don't appear to be required, so commented out
#NOTE: STALE_RULE_PLACEHOLDER_NOTEXPECTINGMATCHES_HERE
IPTBOTH -t mangle -A QOS_MARK_F_${IFACE} -p tcp -m tcp -m multiport \
    --sports 6981,4433 \
    -j DSCP --set-dscp 1 \
    -m comment --comment "TORRENT-LE-tcp" 
IPTBOTH -t mangle -A QOS_MARK_F_${IFACE} -p udp -m udp \
    --sport 6981 -j DSCP --set-dscp 1 \
    -m comment --comment "TORRENT-LE-udp" 





##########ORIGINAL-IPSETMATCHES>BOTH #IPTBOTH-srcONLY
#-m set --match-set Bulk4  dst -j DSCP --set-dscp-class CS1 -m comment --comment "Bulk CS1 ipset" #+src
#-m set --match-set BE4 dst -j CONNMARK --set-xmark 0x01000000/0x01000000 -m comment --comment "Best Effort CS0 ipset" #+src


$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set latsens src -j DSCP \
    --set-dscp-class ${CS_LATSENS:-CS4} -m comment --comment "LATSENS4-SRC-${CS_LATSENS:-CS4}"
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set latsens dst -j DSCP \
    --set-dscp-class ${CS_LATSENS:-CS4} -m comment --comment "LATSENS4-DST-${CS_LATSENS:-CS4}"

$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set latsens6 src -j DSCP \
    --set-dscp-class ${CS_LATSENS:-CS4} -m comment --comment "LATSENS6-SRC-${CS_LATSENS:-CS4}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set latsens6 dst -j DSCP \
    --set-dscp-class ${CS_LATSENS:-CS4} -m comment --comment "LATSENS6-DST-${CS_LATSENS:-CS4}"





$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set streaming dst -j DSCP \
    --set-dscp-class ${CS_STREAMING:-CS3} -m comment --comment "STREAMING4-${CS_STREAMING:-CS3}"
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set streaming src -j DSCP \
    --set-dscp-class ${CS_STREAMING:-CS3} -m comment --comment "STREAMING4-${CS_STREAMING:-CS3}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set streaming6 dst -j DSCP \
    --set-dscp-class ${CS_STREAMING:-CS3} -m comment --comment "STREAMING6-SRC-${CS_STREAMING:-CS3}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set streaming6 src -j DSCP \
    --set-dscp-class ${CS_STREAMING:-CS3} -m comment --comment "STREAMING6-DST-${CS_STREAMING:-CS3}"




$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set ${sLBL}4 dst -j DSCP \
    --set-dscp-class ${CS_GAMING:-CS4} -m comment --comment "GAMING4-${CS_GAMING:-CS4}"
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set ${sLBL}4 src -j DSCP \
    --set-dscp-class ${CS_GAMING:-CS4} -m comment --comment "GAMING4-${CS_GAMING:-CS4}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set ${sLBL}6 dst -j DSCP \
    --set-dscp-class ${CS_GAMING:-CS4} -m comment --comment "GAMING6-${CS_GAMING:-CS4}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set ${sLBL}6 src -j DSCP \
    --set-dscp-class ${CS_GAMING:-CS4} -m comment --comment "GAMING6-${CS_GAMING:-CS4}"




$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set \
    --match-set gamecache4 src -j DSCP --set-dscp-class ${CS_GAMING:-CS3} \
    -m comment --comment "GAMECACHE4src-${CS_GAMING:-CS3}"
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set \
    --match-set gamecache4 dst -j DSCP --set-dscp-class ${CS_GAMING:-CS3} \
    -m comment --comment "GAMECACHE4dst-${CS_GAMING:-CS3}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set \
    --match-set gamecache6  src -j DSCP --set-dscp-class ${CS_GAMING:-CS3} \
    -m comment --comment "GAMECACHE6src-${CS_GAMING:-CS3}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set \
    --match-set gamecache6  dst -j DSCP --set-dscp-class ${CS_GAMING:-CS3} \
    -m comment --comment "GAMECACHE6dst-${CS_GAMING:-CS3}"




$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set cloudflare-v4 src -j DSCP \
    --set-dscp-class $CS_CDN -m comment --comment "CLOUDFL4src-$CS_CDN"
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set cloudflare-v4 dst -j DSCP \
    --set-dscp-class $CS_CDN -m comment --comment "CLOUDFL4dst-$CS_CDN"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set cloudflare-v6 src -j DSCP \
    --set-dscp-class $CS_CDN -m comment --comment "CLOUDFL6src-$CS_CDN"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set cloudflare-v6 dst -j DSCP \
    --set-dscp-class $CS_CDN -m comment --comment "CLOUDFL6dst-$CS_CDN"




$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set usrcdn src -j DSCP \
    --set-dscp-class $CS_CDNB -m comment --comment "CDN4srcB-${CS_CDNB}"
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set usrcdn dst -j DSCP \
    --set-dscp-class $CS_CDNB -m comment --comment "CDN4dstB-${CS_CDNB}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set usrcdn6 src -j DSCP \
    --set-dscp-class $CS_CDNB -m comment --comment "CND6srcB-$CS_CDNB"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -m set --match-set usrcdn6 dst -j DSCP \
    --set-dscp-class $CS_CDNB -m comment --comment "CND6dst-$CS_CDNB"







##################CONTROL+USERFACING-MULTI ### WASHERE HANDLED BY OTHER RULES EXCEPT 143,161,162,514,8080











# echL "markbulk@ipsets" msg
###dynamic de-prioritisation rules: run connectiongoesabovebulktransferlimit #if storedDSCP=CS0 (Best effort) set=CS1(bulk)



#CS_BULK1="${CS_BULK1:-CS1}" ###7 src sep dst plus tcp udp #4-@bulk-set ACS1>CS0downgrade
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -p tcp -m set --match-set bulk src -j DSCP \
    --set-dscp-class ${CS_BULK1:-CS1} -m comment --comment "BULK4-TCPSRC-${CS_BULK1:-CS1}"
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -p udp -m set --match-set bulk src -j DSCP \
    --set-dscp-class ${CS_BULK1:-CS1} -m comment --comment "BULK4-UDPSRC-${CS_BULK1:-CS1}"
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -p tcp -m set --match-set bulk dst -j DSCP \
    --set-dscp-class ${CS_BULK1:-CS1} -m comment --comment "BULK4-TCPDST-${CS_BULK1:-CS1}"
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -p udp -m set --match-set bulk dst -j DSCP \
    --set-dscp-class ${CS_BULK1:-CS1} -m comment --comment "BULK4-UDPDST-${CS_BULK1:-CS1}"

$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -p tcp -m set --match-set bulk6 src -j DSCP \
    --set-dscp-class ${CS_BULK1:-CS1} -m comment --comment "BULK6-TCPSRC-${CS_BULK1:-CS1}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -p udp -m set --match-set bulk6 src -j DSCP \
    --set-dscp-class ${CS_BULK1:-CS1} -m comment --comment "BULK6-UDPSRC-${CS_BULK1:-CS1}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -p tcp -m set --match-set bulk6 dst -j DSCP \
    --set-dscp-class ${CS_BULK1:-CS1} -m comment --comment "BULK6-TCPDST-${CS_BULK1:-CS1}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -p udp -m set --match-set bulk6 dst -j DSCP \
    --set-dscp-class ${CS_BULK1:-CS1} -m comment --comment "BULK6-UDPDST-${CS_BULK1:-CS1}"










######## If you want a connection to remain as CS0 Best Effort, you force the DSCP Fixed bit, the 'set' bit will be set later
#$IP6TABLES -t mangle -A QOS_MARK_F_${IFACE} -m set --match-set BE6 dst -j CONNMARK --set-xmark 0x01000000/0x01000000 -m comment --comment "Best Effort CS0 ipset"
#$IP6TABLES -t mangle -A QOS_MARK_F_${IFACE} -m set --match-set BE6 src -j CONNMARK --set-xmark 0x01000000/0x01000000 -m comment --comment "Best Effort CS0 ipset"




#TESTTHESEHERETOO ??? > OFF ADDED?
#$IPTABLES -t mangle -A QOS_MARK_F_${IFACE} -m set --match-set bulk dst -j CONNMARK --set-xmark 0x01000000/0x01000000 -m comment --comment "Best Effort CS0 ipset"
#$IPTABLES -t mangle -A QOS_MARK_F_${IFACE} -m set --match-set bulk src -j CONNMARK --set-xmark 0x01000000/0x01000000 -m comment --comment "Best Effort CS0 ipset"
#$IP6TABLES -t mangle -A QOS_MARK_F_${IFACE} -m set --match-set bulk6 dst -j CONNMARK --set-xmark 0x01000000/0x01000000 -m comment --comment "Best Effort CS0 ipset"
#$IP6TABLES -t mangle -A QOS_MARK_F_${IFACE} -m set --match-set bulk6 src -j CONNMARK --set-xmark 0x01000000/0x01000000 -m comment --comment "6-WASBE4-TESTON-bulk6"














##################### Apple #5223 appleAPN cod/ps3 samsumg jabber MOSTLY TCPDPORT hpneverwinter udp
$IPTABLES -t mangle -A QOS_MARK_F_${IFACE} -p tcp -d 17.0.0.0/8 -m tcp -m multiport \
    --dports 5223,993 -m comment --comment "APPLEMAIL-CS0-BE" -j CONNMARK --set-xmark 0x01000000/0x01000000
#TESTED-REMOVED-IPSECTIONnotneeded  ############### ALREADY RULE ABOVE
#ipt -t mangle -A QOS_MARK_F_${IFACE} -p tcp -m tcp -m multiport --dports 5223 \
#    -m comment --comment "5223appleAPN-D-TCP-${CS_VID:-CS3}" -j DSCP --set-dscp-class ${CS_VID:-CS3}





###############################unificontroller ########### -> CS0 BE?
###$IPTABLES -t mangle -A QOS_MARK_F_${IFACE} -p tcp -s unificontroller -m tcp -m multiport --dports 8883 -m comment --comment "UnifiController CS0 BE" -j CONNMARK --set-xmark 0x01000000/0x01000000











###############################Zoom - connections go to Zoom with dest ports 8801-8810


#Facetime is interesting. Apple say that for firewall purposes only certain ports are used, they don't say if that's source
#or destination. Turns out it's both, so look for connections with both a source & destination port in the Facetime range
#VID>VIDINT
ipt -t mangle -A QOS_MARK_F_${IFACE} -p udp -m udp -m multiport \
    --sports 3478:3497,16384:16387,16393:16402 -m multiport \
    --dports 3478:3497,16384:16387,16393:16402,16609:16618 -m comment \
    --comment "Facetime-${CS_VID:-CS3}" -j DSCP --set-dscp-class ${CS_VID:-CS3}


###############################Zoom - connections go to Zoom with dest ports 8801-8810
$IPTABLES -t mangle -A QOS_MARK_F_${IFACE} -p udp -m udp -m set \
    --match-set Zoom4 dst -m multiport \
    --dports 8801:8810 -j DSCP --set-dscp-class ${CS_VID:-CS3} -m comment --comment "Zoom4-${CS_VID:-CS3}"

$IP6TABLES -t mangle -A QOS_MARK_F_${IFACE} -p udp -m udp -m set \
    --match-set Zoom6 dst -m multiport \
    --dports 8801:8810 -j DSCP --set-dscp-class ${CS_VID:-CS3} -m comment --comment "Zoom6-${CS_VID:-CS3}"




####################################Whatsapp Video
ipt -t mangle -A QOS_MARK_F_${IFACE} -p udp -m udp -m multiport --dports 3478 -m comment \
    --comment "Whatsapp-${CS_VID:-CS3}" -j DSCP --set-dscp-class ${CS_VID:-CS3}



#####################Irc
ipt -t mangle -A QOS_MARK_F_${IFACE} -p tcp -m tcp -m multiport --dports 6697 -m comment --comment "IRC CS0 BE" -j CONNMARK --set-xmark 0x01000000/0x01000000
####################Wireguard
ipt -t mangle -A QOS_MARK_F_${IFACE} -p udp -m udp -m multiport --sports 51820 -m comment --comment "WG CS0 BE" -j CONNMARK --set-xmark 0x01000000/0x01000000






#####################CS_ICMP="${CS_ICMP:-"AF33"}" #CS0BE AF33 EF #CS_ICMP2="EF" #onlyherefornow>phasetwo
#    CONTROL ICMP(2)
#####################Icmp/v6 1.0 ORG-LOCKINCS0@CONNMARK0x10000000 1.1 #1-CS5#2EF#3AF31#3.1EF
$IPTABLES -t mangle -A QOS_MARK_F_${IFACE} -p icmp -j DSCP \
    --set-dscp-class ${CS_ICMP2} -m comment --comment "ICMP6m2-${CS_ICMP2}"
$IP6TABLES -t mangle -A QOS_MARK_F_${IFACE} -p icmpv6 -j DSCP \
    --set-dscp-class ${CS_ICMP2} -m comment --comment "ICMP6m2-${CS_ICMP2}"
#IP4/6 QOS_MARK_F_${IFACE} -p icmp -m comment --comment "Ping CS0 BE" -j CONNMARK --set-xmark 0x01000000/0x01000000






####################################TEST-REMOVEME MOVEDABOVE@I ATBOTTOM?
#$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -p udp -m multiport \
#    --ports 53,5353,123,546,547 -j CONNMARK --set-xmark 0x01000000/0x01000000
#$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -p udp -m multiport \
#    --ports 53,5353,123,546,547 -j CONNMARK --set-xmark 0x01000000/0x01000000
####################################TEST-REMOVEME MOVEDABOVE@I
$IPTABLES -t mangle -I QOS_MARK_F_${IFACE} -p udp -m multiport \
    --ports 53,5353,123,67,68 -j DSCP \
    --set-dscp-class ${CS_CONTROL2} -m comment --comment "DNS-NTP4-UDP-${CS_CONTROL2}"
$IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} -p udp -m multiport \
    --ports 53,5353,123,546,547 -j DSCP \
    --set-dscp-class ${CS_CONTROL2} -m comment --comment "DNS6-NTP6-UDP-${CS_CONTROL2}"







######################################## HACKYVOIP-TMPFIX
#RPI4QOS_VOIP_MACS="08:00:27:f8:7b:0c"
CS_VOIP="CS6" #CS_VOIP="${CS_LATSENS:-CS6}"
if [ ! -z "$RPI4QOS_VOIP_MACS" ]; then

    for p in $RPI4QOS_VOIP_MACS ; do
        
        echL "voip mac tmp EF: $p $CS_VOIP"    

        $IPTABLES -t mangle -I QOS_MARK_F_${IFACE} \
            -m mac --mac-source ${p} \
            -j DSCP --set-dscp-class ${CS_CONTROL2} \
            -m comment --comment "VOIPMAC-$p-${CS_VOIP}"

        $IP6TABLES -t mangle -I QOS_MARK_F_${IFACE} \
            -m mac --mac-source ${p} \
            -j DSCP --set-dscp-class ${CS_CONTROL2} \
            -m comment --comment "VOIPMAC-$p-${CS_VOIP}"

    done

fi

#ip6tables -t mangle -D PREROUTING -m conntrack --ctstate NEW \
#                    -m mac --mac-source ${cMAC} -j SET --add-set ${sLBL} src --exist 2>/dev/null









######################
#    STORE MARKS
######################

####################### store the decided DSCP into connmark for later restoration by ctinfo
ipt -t mangle -A QOS_MARK_F_${IFACE} -j CONNMARK --set-dscpmark 0xfc000000/0x02000000
####################### if we stored a non best effort DSCP then lock it in place, there's no traffic based deprioritisation required
ipt -t mangle -A QOS_MARK_F_${IFACE} -m connmark ! --mark 0x0/0xfc000000 -j CONNMARK --set-xmark 0x01000000/0x01000000
# ---- End of 'hard/fixed' rules





#######################
#   Dynamic rules
######################

#   These get run when a connection first goes above our bulk transfer size limit
#   if-stored-DSCP=CS0=(Best effort) > set-to-CS1=(bulk) -> this is the dynamic de-prioritisation
##############################################################################################################
# CS1 = 8 << 2 = 0x20, setting our Fixed bit = 0x21
# ipt -t mangle -A QOS_MARK_D_${IFACE} -m connmark --mark 0x00000000/0xfc000000 -j CONNMARK --set-xmark 0x20000000/0x20000000
# and by now whatever we have we stick with, so set DSCPFixed bit
ipt -t mangle -A QOS_MARK_D_${IFACE} -j CONNMARK --set-xmark 0x21000000/0x21000000
######################## ---- End of Dynamic Rules








################# # It all starts here
# CAKE chain to combine hard/dynamic rules
#########################################
################# # It all starts here
################# Send unmarked connections to the hard/fixed marking chain
ipt -t mangle -A QOS_CAKE_${IFACE} -m connmark --mark 0x00000000/0x02000000 -g QOS_MARK_F_${IFACE}


###################### V4 # Send marked connections over CONNB bytes and not DSCPFixed to the dynamic rules
######################## # original direction first - the original src ip is local # ipv4
######################## /etc/custom/firewall/dscp/backup/sqmdscp_localnets6
#echL "SUBNET: $SUBNET"

if [ "$SUBNET" ] ; then

	$IPTABLES -t mangle -A QOS_CAKE_${IFACE} -m conntrack --ctorigsrc ${SUBNET} -g QOS_MARK_D_orig_${IFACE}
	$IPTABLES -t mangle -A QOS_CAKE_${IFACE} -m conntrack --ctreplsrc ${SUBNET} -g QOS_MARK_D_repl_${IFACE}

	####################### orig direction
	$IPTABLES -t mangle -A QOS_MARK_D_orig_${IFACE} \
	-m connbytes --connbytes ${CONNBUP} --connbytes-dir original --connbytes-mode bytes \
	-g QOS_MARK_D_${IFACE}
	
    $IPTABLES -t mangle -A QOS_MARK_D_orig_${IFACE} \
	-m connbytes --connbytes ${CONNBDN} --connbytes-dir reply  --connbytes-mode bytes \
	-g QOS_MARK_D_${IFACE}

	###################### reply direction - reply src IP is local
    $IPTABLES -t mangle -A QOS_MARK_D_repl_${IFACE} \
	-m connbytes --connbytes ${CONNBDN} --connbytes-dir original --connbytes-mode bytes \
	-g QOS_MARK_D_${IFACE}

    $IPTABLES -t mangle -A QOS_MARK_D_repl_${IFACE} \
	-m connbytes --connbytes ${CONNBUP} --connbytes-dir reply --connbytes-mode bytes \
	-g QOS_MARK_D_${IFACE}

fi





############################################ and now for ipv6. #echL "PREFIX: $PREFIX"
if [ "$PREFIX" ] ; then

    $IP6TABLES -t mangle -A QOS_CAKE_${IFACE} -m conntrack --ctorigsrc ${PREFIX} -g QOS_MARK_D_orig_${IFACE}
	$IP6TABLES -t mangle -A QOS_CAKE_${IFACE} -m conntrack --ctreplsrc ${PREFIX} -g QOS_MARK_D_repl_${IFACE}

	#############################################################3# orig direction
	$IP6TABLES -t mangle -A QOS_MARK_D_orig_${IFACE} \
	-m connbytes --connbytes ${CONNBUP} --connbytes-dir original --connbytes-mode bytes \
	-g QOS_MARK_D_${IFACE}
	
    $IP6TABLES -t mangle -A QOS_MARK_D_orig_${IFACE} \
	-m connbytes --connbytes ${CONNBDN} --connbytes-dir reply --connbytes-mode bytes \
	-g QOS_MARK_D_${IFACE}
	
    ############################################################# reply direction
	$IP6TABLES -t mangle -A QOS_MARK_D_repl_${IFACE} \
	-m connbytes --connbytes ${CONNBDN} --connbytes-dir original --connbytes-mode bytes \
	-g QOS_MARK_D_${IFACE}
	
    $IP6TABLES -t mangle -A QOS_MARK_D_repl_${IFACE} \
	-m connbytes --connbytes ${CONNBUP} --connbytes-dir reply --connbytes-mode bytes \
	-g QOS_MARK_D_${IFACE}

fi #################################### END IPV6 CONNMARKHANDLING


########################################################### Hook the above rules into the firewall path
ipt -t mangle -A POSTROUTING -o ${IFACE} -m connmark --mark 0x00000000/0x01000000 -j QOS_CAKE_${IFACE}
#@@@ INPUT/OUTPUT@localCONTROL-HERE

}






ipt_destruct() {


    ipt -t mangle -D POSTROUTING -o ${IFACE} -m connmark --mark 0x00000000/0x01000000 -j QOS_CAKE_${IFACE}
	ipt -t mangle -F QOS_MARK_F_${IFACE}
	ipt -t mangle -F QOS_MARK_F_REMAP_${IFACE}
	ipt -t mangle -F QOS_MARK_D_orig_${IFACE}
	ipt -t mangle -F QOS_MARK_D_repl_${IFACE}
	ipt -t mangle -F QOS_MARK_D_${IFACE}
	ipt -t mangle -F QOS_CAKE_${IFACE}

	ipt -t mangle -X QOS_MARK_F_${IFACE}
	ipt -t mangle -X QOS_MARK_F_REMAP_${IFACE}
	ipt -t mangle -X QOS_MARK_D_orig_${IFACE}
	ipt -t mangle -X QOS_MARK_D_repl_${IFACE}
	ipt -t mangle -X QOS_MARK_D_${IFACE}
	ipt -t mangle -X QOS_CAKE_${IFACE}




    #TESTINGTHIS-tagstatixdoubleentries
    DSCPstaticCHAIN="dscptagstatic"
    iptables -t mangle -F ${DSCPstaticCHAIN} 2>/dev/null
    #iptables -t mangle -X ${DSCPstaticCHAIN} 2>/dev/null
    ip6tables -t mangle -F ${DSCPstaticCHAIN} 2>/dev/null
    #ip6tables -t mangle -X ${DSCPstaticCHAIN} 2>/dev/null

}






############################################################### dlakelan phase2

ipt64dscp(){
    $IPTABLES -t mangle -A ${DSCPstaticCHAIN} $*
    $IP6TABLES -t mangle -A ${DSCPstaticCHAIN} $*
}
ipt4dscp() {
    $IPTABLES -t mangle -A ${DSCPstaticCHAIN} $*
}
ipt6dscp() {
    $IP6TABLES -t mangle -A ${DSCPstaticCHAIN} $*
}






setuptagstatic() { #NOTE @ FUNCTIONSABOVE destruct and loadthisfunc not really needed


######################
WASHDSCPUP="yes"; WASHDSCPDOWN="yes"
######################
UPRATE="${UPLINK}"
DOWNRATE="${DOWNLINK}"


WAN="$IFACE" #MODDED
######################
DSCPstaticCHAIN="dscptagstatic"
local CPF="STATIX" #comment-prefix
local CPf="statix" #comment-prefix




#CSINIT &>/dev/null #######################@startNONEED  #!> ackrate statistical removed
#######################################################
iptables -t mangle -N ${DSCPstaticCHAIN} 2>/dev/null
iptables -t mangle -F ${DSCPstaticCHAIN} 2>/dev/null
ip6tables -t mangle -N ${DSCPstaticCHAIN} 2>/dev/null
ip6tables -t mangle -F ${DSCPstaticCHAIN} 2>/dev/null
#######################################################




#############################NOTE NON-CS0 bypasses QOS_F_eth1 REMARKS@-m dscp 0x00 ### CS_BULK=${CS_BULK:-CS1}
#CS_TORRENT="${CS_TORRENT:-"CS1"}"; UDPBULKPT="51413"; TCPBULKPT="51413,6881:6889"
##################################<<<>>>### UDP downgrade torrents > CS1
ipt64dscp -p udp -m multiport --sports "$UDPBULKPT" -j DSCP \
    --set-dscp-class ${CS_TORRENT:-CS1} -m comment --comment "$CPF-BULKPORTS-sUDP-${CS_TORRENT:-CS1}"
ipt64dscp -p udp -m multiport --dports "$UDPBULKPT" -j DSCP \
    --set-dscp-class ${CS_TORRENT:-CS1} -m comment --comment "$CPF-BULKPORTS-dUDP-${CS_TORRENT:-CS1}"
##################################<<<>>>### TCP downgrade torrents
ipt64dscp -p tcp -m multiport --sports "$TCPBULKPT" -j DSCP \
    --set-dscp-class ${CS_TORRENT:-CS1} -m comment --comment "$CPF-BULKPORTS-sTCP-${CS_TORRENT:-CS1}"
ipt64dscp -p tcp -m multiport --dports "$TCPBULKPT" -j DSCP \
    --set-dscp-class ${CS_TORRENT:-CS1} -m comment --comment "$CPF-BULKPORTS-dTCP-${CS_TORRENT:-CS1}"




#######################<<<>>>###
CS_VIDINT="${CS_VIDINT:-CS4}" # VIDINT
#######################<<<>>>###
########## boost jitsi meet udp to CS4 if bandwidthvideoconf CS5 makerealtime caninterfere-w-oth-realtime/game CS4~enough
ipt64dscp -p udp --dport 10000 -j DSCP --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-jitsi-dUDP-${CS_VIDINT}"
ipt64dscp -p udp --sport 10000 -j DSCP --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-jitsi-sUDP-${CS_VIDINT}"
########################################################################################### boost zoom to CS4
#######IPSET^UPPERRULEbroad? #NOTE portmatchspecific@QOS_MARK? MISSING sports direction@QOS_MARK-uneeded #@2021add6 TESTING
PORTS_ZOOMb="3478:3479,8801:8802" #b-bidirectional #d@8801:8810 #--dports 8801:8810 -j DSCP --set-dscp-class ${CS_VIDINT:-CS3}
#########################STATIX
ipt64dscp -p udp -m multiport --sports $PORTS_ZOOMb -j DSCP \
    --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-zoom-UDPsrc-$CS_VIDINT"
ipt64dscp -p udp -m multiport --dports $PORTS_ZOOMb -j DSCP \
    --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-zoom-UDPdst-$CS_VIDINT"
########################IPSET
$IPTABLES -t mangle -A QOS_MARK_F_${IFACE} -p udp -m udp -m set --match-set Zoom4 dst -m multiport \
    --dports ${PORTS_ZOOMb} -j DSCP --set-dscp-class ${CS_VIDINT:-CS3} \
    -m comment --comment "$CPF-ZOOM4SET-INTO-QOSMARK-UDPdst-$CS_VIDINT"
$IP6TABLES -t mangle -A QOS_MARK_F_${IFACE} -p udp -m udp -m set --match-set Zoom6 dst -m multiport \
    --dports ${PORTS_ZOOMb} -j DSCP --set-dscp-class ${CS_VIDINT:-CS3} \
    -m comment --comment "$CPF-ZOOM6SET-INTO-QOSMARK-UDPdst-$CS_VIDINT"
########################################################################################### boost google meet CS4
ipt64dscp -p udp -m multiport --sports 19302:19309 -j DSCP \
    --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-googlemeet-dUDP-$CS_VIDINT"
ipt64dscp -p udp -m multiport --dports 19302:19309 -j DSCP \
    --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-googlemeet-dUDP-$CS_VIDINT"
########################################################################################### webex CS4UDP
ipt64dscp -p udp --dport 9000 -j DSCP --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-webex-UDPd-$CS_VIDINT"
ipt64dscp -p udp --sport 9000 -j DSCP --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-webex-UDPs-$CS_VIDINT"
########################################################################################### teamviewer CS4TCPUDP
ipt64dscp -p udp --dport 5938 -j DSCP --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-teamvw-UDPd-$CS_VIDINT"
ipt64dscp -p udp --sport 5938 -j DSCP --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-teamvw-UDPs-$CS_VIDINT"
ipt64dscp -p tcp --dport 5938 -j DSCP --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-teamvw-TCPd-$CS_VIDINT"
ipt64dscp -p tcp --sport 5938 -j DSCP --set-dscp-class ${CS_VIDINT} -m comment --comment "$CPF-teamvw-TCPs-$CS_VIDINT"
#######################<<<>>>###
# VIDINT-END
#######################<<<>>>###



#######################<<<>>>###
# CONTROL
#######################<<<>>>###
for ipproto in 4 6 ; do #UDPCONTROL
    for dir in s d ; do
        ipt${ipproto}dscp -p udp -m multiport --${dir}ports "$UDPCONTROLPT" -j DSCP \
            --set-dscp-class ${CS_CONTROL} -m comment --comment "$CPF-CONTROL${ipproto}-${dir}UDP-$CS_CONTROL" 
    done
done
for ipproto in 4 6 ; do #TCPCONTROL
    for dir in s d ; do
        ipt${ipproto}dscp -p tcp -m multiport --${dir}ports "$TCPCONTROLPT" -j DSCP \
            --set-dscp-class ${CS_CONTROL} -m comment --comment "$CPF-CONTROL${ipproto}-${dir}TCP-$CS_CONTROL" 
    done
done
########################################## 2EXPERIMENTAL-MARK-THESE-AS-CS5?ALL-SYNS>@?hashlimit
ipt4dscp -p icmp -m dscp --dscp 0x00 -j DSCP --set-dscp-class EF -m comment --comment "$CPF-ICMP4-EF"
ipt6dscp -p icmpv6 -m dscp --dscp 0x00 -j DSCP --set-dscp-class EF -m comment --comment "$CPF-ICMP6-EF"
#######################<<<>>>###
# CONTROL END
#######################<<<>>>###





#@CS_STREAMTCPMIN="CS4" ### somegamesuseTCP-matchTCPstreamsuse-lessth150pps ~interactive-rather-than-bulk
#LAT=CS5
#LATSENS=CS4


for dir in src dst ; do #O>CS5@>CS4>!AF41@GAMING #CS_LAT=${CS_LAT:-CS5} UDP
    ipt4dscp -p udp -m set --match-set "latsens" $dir \
        -j DSCP --set-dscp-class ${CS_LAT} -m comment --comment "$CPF-latSEN${dir}u4-$CS_LAT"
    ipt6dscp -p udp -m set --match-set "latsens6" $dir \
        -j DSCP --set-dscp-class ${CS_LAT} -m comment --comment "$CPF-latSEN${dir}u6-$CS_LAT"
done


############################TCP+hashlimit@CS4
ipt4dscp -p tcp -m set --match-set "latsens" src  -m hashlimit \
    --hashlimit-mode srcip,srcport,dstip,dstport --hashlimit-name latsensTunder4 \
    --hashlimit-upto 150/second --hashlimit-burst 150 --hashlimit-rate-match \
    --hashlimit-rate-interval 1 -j DSCP --set-dscp-class CS4
########4-tcp-dst
ipt4dscp -p tcp -m set --match-set "latsens" dst  -m hashlimit \
    --hashlimit-mode srcip,srcport,dstip,dstport --hashlimit-name latsensTunder4 \
    --hashlimit-upto 150/second --hashlimit-burst 150 --hashlimit-rate-match \
    --hashlimit-rate-interval 1 -j DSCP --set-dscp-class CS4
#######6-tcp-src
ipt6dscp -p tcp -m set --match-set "latsens6" src  -m hashlimit \
    --hashlimit-mode srcip,srcport,dstip,dstport --hashlimit-name latsensTunder6 \
    --hashlimit-upto 150/second --hashlimit-burst 150 --hashlimit-rate-match \
    --hashlimit-rate-interval 1 -j DSCP --set-dscp-class CS4
#######6-tcp-dst
ipt6dscp -p tcp -m set --match-set "latsens6" dst  -m hashlimit \
    --hashlimit-mode srcip,srcport,dstip,dstport --hashlimit-name latsensTunder6 \
    --hashlimit-upto 150/second --hashlimit-burst 150 --hashlimit-rate-match \
    --hashlimit-rate-interval 1 -j DSCP --set-dscp-class CS4




for proto in udp tcp ; do ########down prioritize low priority machines, tcp and udp: #O>CS2@>CS1 #CS_BULK=${CS_BULK:-CS2}
    for dir in src dst ; do
	ipt4dscp -p $proto -m set --match-set "bulk" $dir -j DSCP --set-dscp-class ${CS_BULK} -m comment --comment "$CPF-BK${dir}${proto}4-$CS_LAT"
	ipt6dscp -p $proto -m set --match-set "bulk6" $dir -j DSCP --set-dscp-class ${CS_BULK} -m comment --comment "$CPF-BK${dir}${proto}6-$CS_LAT"
    done
done #orig lowprioset






#CS5>CS_GAMING #srconlyfornow #@+gamedevice-limitcatches@dependsonCS5issuesinthischain@00only-on-enter||CSother
sLBL="${sLBL:-gamingdevice}" #justincaseisntdefined
if ipset -L -n 2>/dev/null | grep -q "^${sLBL}4$"; then
    ipt4dscp -p udp -m set --match-set "gamingdevice4" src \
        -m dscp --dscp-class CS5 -m hashlimit --hashlimit-mode srcip,srcport,dstip,dstport \
        --hashlimit-name gameDG41 \
        --hashlimit-above 450/second --hashlimit-burst 50 \
        --hashlimit-rate-match --hashlimit-rate-interval 1 -j DSCP \
        --set-dscp-class CS2 -m comment --comment "GAMEDOWNGRADE4-CS5toCS2"
fi


if ipset -L -n 2>/dev/null | grep -q "^${sLBL}6$"; then
    ipt6dscp -p udp -m set --match-set "gamingdevice6" src \
        -m dscp --dscp-class CS5 -m hashlimit --hashlimit-mode srcip,srcport,dstip,dstport \
        --hashlimit-name gameDG61 --hashlimit-above 450/second --hashlimit-burst 50 \
        --hashlimit-rate-match --hashlimit-rate-interval 1 -j DSCP \
        --set-dscp-class CS2 -m comment --comment "GAMEDOWNGRADE6-CS5toCS2"
fi






CS_TINYUPG="AF41" #CS_TINYUPG="EF"
for ipproto in 4 6 ; do
    for proto4 in tcp udp ; do
        ipt${ipproto}dscp -p ${proto4} -m ${proto4} ! --dport 443 -m length --length :64 \
            -m dscp --dscp 0x00 -m hashlimit \
            --hashlimit-mode srcip,srcport,dstip,dstport --hashlimit-name tinyhighprio${proto4}${ipproto} \
            --hashlimit-upto 65/second --hashlimit-burst 123 --hashlimit-rate-match \
            --hashlimit-rate-interval 1 -j DSCP --set-dscp-class ${CS_TINYUPG} \
            -m comment --comment "$CPF-TINYCS0-UPG-${CS_TINYUPG}-${proto4}-${ipproto}"
    done
done



CS_HTTP1=CS5
CS_HTTP2=AF23
ipt4dscp -p tcp -m tcp --dport 443 -m dscp --dscp 0x00 -m hashlimit \
    --hashlimit-mode srcip,srcport,dstip,dstport --hashlimit-name webhighprio4 \
    --hashlimit-upto 23/second --hashlimit-burst 111 --hashlimit-rate-match \
    --hashlimit-rate-interval 1 -j DSCP --set-dscp-class $CS_HTTP1 -m comment \
    --comment "$CPF-HTTPS4BURST00-$CS_HTTP1"

ipt6dscp -p tcp -m tcp --dport 443 -m dscp --dscp 0x00 -m hashlimit \
    --hashlimit-mode srcip,srcport,dstip,dstport --hashlimit-name webhighprio6 \
    --hashlimit-upto 23/second --hashlimit-burst 111 --hashlimit-rate-match \
    --hashlimit-rate-interval 1 -j DSCP --set-dscp-class $CS_HTTP1 -m comment \
    --comment "$CPF-HTTPS6BURST00-$CS_HTTP1"


#TMPON@chunky
#TMPON@chunky
#TMPON@chunky
ipt4dscp -p tcp -m tcp --dport 443 -m dscp --dscp 0x00 \
    -j DSCP --set-dscp-class $CS_HTTP2 \
    -m comment --comment "$CPF-HTTPS4-00default-$CS_HTTP2"
ipt6dscp -p tcp -m tcp --dport 443 -m dscp --dscp 0x00 \
    -j DSCP --set-dscp-class $CS_HTTP2 \
    -m comment --comment "$CPF-HTTPS6-00default-$CS_HTTP2"
#TMPON@chunky
#TMPON@chunky
#TMPON@chunky




} ############################################################### dlakelan-end





sqm_prepare_script() {
    do_modules
	verify_qdisc $QDISC "cake" || return 1
    ipt_destruct 2>/dev/null #NONORIGINAL!!!
    ipt_setup

    
    if [ ! -z "$RPI4QOS_RECLASSIFY_SH" ]; then
        echL "running reclassify: $RPI4QOS_RECLASSIFY_SH $IS_SQMCALL"
        sh "$RPI4QOS_RECLASSIFY_SH" $IS_SQMCALL
    fi #2>/dev/null

}







###########################################################################



##########################################################################
#tcpdump -i any -v '((ip[1] & 0xfc) >> 2 == [hex-value of dscp code])'
#tcpdump -i any -v '((ip[1] & 0xfc) >> 2 == 0x1a) && udp src port 5060' #AF31
##########################################################################
# ------------------------------------------------------------------
#   |   Service     |  DSCP   |    DSCP     |       Application        |
#   |  Class Name   |  Name   |    Value    |        Examples          |
#   |===============+=========+=============+==========================|
#   |Network Control|  CS6    |   110000    | Network routing          |
#   |---------------+---------+-------------+--------------------------|
#   | Telephony     |   EF    |   101110    | IP Telephony bearer      |
#   |---------------+---------+-------------+--------------------------|
#   |  Signaling    |  CS5    |   101000    | IP Telephony signaling   |
#   |---------------+---------+-------------+--------------------------|
#   | Multimedia    |AF41,AF42|100010,100100|   H.323/V2 video         |
#   | Conferencing  |  AF43   |   100110    |  conferencing (adaptive) |
#   |---------------+---------+-------------+--------------------------|
#   |  Real-Time    |  CS4    |   100000    | Video conferencing and   |
#   |  Interactive  |         |             | Interactive gaming       |
#   |---------------+---------+-------------+--------------------------|
#   | Multimedia    |AF31,AF32|011010,011100| Streaming video and      |
#   | Streaming     |  AF33   |   011110    |   audio on demand        |
#   |---------------+---------+-------------+--------------------------|
#   |Broadcast Video|  CS3    |   011000    |Broadcast TV & live events|
#   |---------------+---------+-------------+--------------------------|
#   | Low-Latency   |AF21,AF22|010010,010100|Client/server transactions|
#   |   Data        |  AF23   |   010110    | Web-based ordering       |
#   |---------------+---------+-------------+--------------------------|
#   |     OAM       |  CS2    |   010000    |         OAM&P            |
#   |---------------+---------+-------------+--------------------------|
#   |High-Throughput|AF11,AF12|001010,001100|  Store and forward       |
#   |    Data       |  AF13   |   001110    |     applications         |
#   |---------------+---------+-------------+--------------------------|
#   |    Standard   | DF (CS0)|   000000    | Undifferentiated         |
#   |               |         |             | applications             |
#   |---------------+---------+-------------+--------------------------|
#   | Low-Priority  |  CS1    |   001000    | Any flow that has no BW  |
#   |     Data      |         |             | assurance                |
#    ------------------------------------------------------------------
##################################################################################
#curl -L https://raw.githubusercontent.com/ldir-EDB0/sqm-scripts/exp/src/ctinfo_4layercake.qos > /usr/lib/sqm/ctinfo_4layercake.qos




#THEBASEBITS






